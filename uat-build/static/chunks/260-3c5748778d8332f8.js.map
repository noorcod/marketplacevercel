{"version":3,"file":"static/chunks/260-3c5748778d8332f8.js","mappings":"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","sources":["webpack://_N_E/./src/components/PaginationBar.tsx","webpack://_N_E/./src/components/Topbar.tsx","webpack://_N_E/./src/components/Footer.tsx","webpack://_N_E/./src/components/Header.tsx","webpack://_N_E/./src/components/ReservationOffcanvas.tsx","webpack://_N_E/./src/components/WishlistOffcanvas.tsx","webpack://_N_E/./src/components/layouts/Layout.tsx","webpack://_N_E/./src/components/Sidebar/Sidebar.tsx","webpack://_N_E/./src/components/ProductCard.tsx","webpack://_N_E/./src/components/MultiRangeSlider.tsx","webpack://_N_E/./src/components/SideFiltersLoader.tsx","webpack://_N_E/./src/components/SideFilters.tsx","webpack://_N_E/./src/components/MobileSideFilter.tsx","webpack://_N_E/./src/components/index.js","webpack://_N_E/./src/styles/MobileSideFilter.module.css","webpack://_N_E/./src/styles/PaginationBar.module.css","webpack://_N_E/./src/styles/ProductCard.module.css","webpack://_N_E/./src/styles/SideFilters.module.css","webpack://_N_E/<anon>"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n// import { useNavigate } from \"react-router-dom\";\r\nimport style from \"../styles/PaginationBar.module.css\";\r\n\r\n\r\ninterface changePage{ fn: (i: any) => void}\r\nconst PaginationBar = ({ noOfPages, currentPage, changePage }:any) => {\r\n  const [pages, setPages] = useState<any>([]);\r\n  //   const navigate = useNavigate();\r\n  const changePageHandle = (i:any) => {\r\n    changePage(i);\r\n  };\r\n\r\n  const createPaginationItem = (i:any) => {\r\n    return (\r\n      <Pagination.Item\r\n        key={i}\r\n        active={i === currentPage}\r\n        onClick={() => changePageHandle(i)}\r\n      >\r\n        {i}\r\n      </Pagination.Item>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    let row = [];\r\n    if (noOfPages < 10) {\r\n      for (var i = 1; i <= noOfPages; i++) {\r\n        row.push(createPaginationItem(i));\r\n      }\r\n    } else {\r\n      row.push(createPaginationItem(1));\r\n      if (currentPage - 2 > 1) {\r\n        row.push(<Pagination.Ellipsis />);\r\n      }\r\n      let midpoint = currentPage - 1;\r\n      if (midpoint <= 1) {\r\n        midpoint = 2;\r\n      } else if (midpoint + 4 >= noOfPages) {\r\n        midpoint = noOfPages - 5;\r\n      }\r\n      for (let i = midpoint; i <= midpoint + 4; i++) {\r\n        row.push(createPaginationItem(i));\r\n      }\r\n      if (currentPage + 4 < noOfPages) {\r\n        row.push(<Pagination.Ellipsis />);\r\n      }\r\n      row.push(createPaginationItem(noOfPages));\r\n    }\r\n    setPages(row);\r\n  }, [noOfPages, currentPage]);\r\n\r\n  return (\r\n    <>\r\n      <Pagination\r\n        className={`mb-5 justify-content-center align-items-center mt-5 ${style.paginationItems} `}\r\n      >\r\n        <Pagination.Prev\r\n          disabled={currentPage === 1}\r\n          onClick={() => changePageHandle(currentPage - 1)}\r\n        />\r\n        {pages}\r\n        <Pagination.Next\r\n          disabled={currentPage === noOfPages}\r\n          onClick={() => changePageHandle(currentPage + 1)}\r\n        />\r\n      </Pagination>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaginationBar;\r\n","\"use client\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport { Col, Dropdown, Row } from \"react-bootstrap\";\r\nimport { announcement, favourite, userIcon } from \"../../public/icons/index\";\r\nimport style from \"./../styles/Topbar.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useAuth from \"./auth/useAuth\";\r\nimport { useUserStore } from \"../store/User\";\r\nimport { useWishlistStore } from \"../store/wishList\";\r\nimport { usePathname, useRouter } from \"next/navigation\";\r\nimport ScrollDown from \"./ScrollDown\";\r\nconst Topbar = ({ handleOpenReservationOffcanvas, handleOpenWishlistOffcanvas }: any) => {\r\n  const router = useRouter();\r\n  const { user, token } = useUserStore((state: any) => state);\r\n  const pathname = usePathname();\r\n  const { wishlistItems, count } = useWishlistStore((list: any) => list);\r\n  const { verifyToken, Logout } = useAuth();\r\n  useEffect(() => {\r\n    if (!token) {\r\n      verifyToken();\r\n    }\r\n  }, [token]);\r\n  return (\r\n    <main className=\"main\">\r\n      <Row className={`py-2 ${style.banner} border-bottom`}>\r\n        <Col className={`d-flex align-items-center px-0 gap-2 ${style.bannerText}`}>\r\n          <Image className={style.announcement} src={announcement} alt={\"announcement\"} width={20} height={20} />\r\n          <span>\r\n            TechBazaar - Connecting Tech Retailers with Tech Lovers{\" \"}\r\n            <Link className=\"link text-decoration-underline\" href=\"https://techbazaar.io/\">\r\n              Know more\r\n            </Link>\r\n          </span>\r\n        </Col>\r\n        <Col className={` align-items-center justify-content-end pe-0 gap-3 ${style.rightBanner}`}>\r\n          {token ? (\r\n            // <Link href={\"/wishlist\"}>\r\n            <div className=\"d-flex ms-3 align-items-center gap-2 cursor-pointer\" onClick={handleOpenWishlistOffcanvas}>\r\n              <span className=\"d-sm-inline d-none\">Wishlist</span>\r\n              <div className=\"position-relative\" style={{ width: \"20px\", height: \"20px\" }}>\r\n                <Image src={favourite} alt=\"favourite\" style={{ width: \"100%\", height: \"100%\" }} />\r\n                <div\r\n                  className=\"position-absolute bg-white\"\r\n                  style={{\r\n                    top: \"0\",\r\n                    right: \"-50%\",\r\n                    borderRadius: \"50%\",\r\n                    width: \"20px\",\r\n                    height: \"20px\",\r\n                    textAlign: \"center\",\r\n                    justifyContent: \"center\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    boxShadow: \"0 0 1px black\",\r\n                  }}\r\n                >\r\n                  <span\r\n                    className=\"link\"\r\n                    style={{\r\n                      fontSize: \"11px\",\r\n                    }}\r\n                  >\r\n                    {wishlistItems.length}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            // </Link>\r\n            <></>\r\n          )}\r\n          <div>\r\n            {token ? (\r\n              <>\r\n                <Dropdown className=\"picon px-0\">\r\n                  <Dropdown.Toggle className=\"px-0 d-flex align-items-center gap-2\" variant=\"\" id=\"dropdown-basic\">\r\n                    <div style={{ width: \"20px\", height: \"20px\" }}>\r\n                      <Image src={userIcon} alt=\"user\" style={{ width: \"100%\", height: \"100%\" }} />\r\n                    </div>\r\n                    <span className=\"d-sm-inline\">{user?.first_name}</span>\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item as=\"span\" className=\"cursor-pointer\" onClick={handleOpenReservationOffcanvas}>\r\n                      Reservations\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item\r\n                      onClick={() => {\r\n                        Logout();\r\n                      }}\r\n                    >\r\n                      Logout\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>{\" \"}\r\n              </>\r\n            ) : (\r\n              <Link href={`/login?redirect=${pathname}`}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <div className=\"d-flex align-items-center\" style={{ width: \"20px\", height: \"20px\" }}>\r\n                    <Image src={userIcon} alt=\"user\" style={{ width: \"100%\", height: \"100%\" }} />\r\n                  </div>\r\n                  <span className=\"d-sm-inline\">Sign In</span>\r\n                </div>\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Topbar;\r\n","import Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport styles from \"./../styles/Footer.module.css\";\r\nimport { facebook, twitter, instagram, youtube, TechBazaarImage, tblogoName, ultracodesLogo } from \"../../public/images\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useQuery, useQueryClient } from \"@tanstack/react-query\";\r\n\r\nconst Footer = () => {\r\n  const router = useRouter();\r\n  const queryClient = useQueryClient();\r\n  const data = queryClient.getQueryData([\"viewList\"]);\r\n  return (\r\n    <footer className=\"main \">\r\n      <Row className={`${styles.footerRow} p-2`}>\r\n        <Col lg=\"12\" className=\"px-0  d-none d-lg-block\">\r\n          <hr className={`w-100 mt-0  ${styles.separator}`} />\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"4\" md=\"4\" lg=\"12\" className=\"px-0 pt-lg-0 pt-4\">\r\n          <Row className=\"align-items-center\">\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"2\">\r\n              <h6 className=\"pb-lg-0 pb-4 mb-lg-0 mb-1\">Seller Point</h6>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"7\">\r\n              <p className={`fst-italic fs-15 mb-4 mb-lg-0 ${styles.footerText}`}>{`If you wish to join TechBazaar as a seller, then click here to begin your seller journey.`}</p>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"3\" className=\"text-lg-end\">\r\n              <Link href=\"/become-seller\">\r\n                <Button className={`${styles.sellerBtn} rounded-2`} variant=\"outline-primary\">\r\n                  Become a seller\r\n                </Button>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col lg=\"12\" className=\"px-0 d-none d-lg-block\">\r\n          <hr className={`w-100 my-4 ${styles.separator}`} />\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"4\" md=\"4\" lg=\"3\" className=\"px-0 ps-0 ps-lg-0  pt-lg-0 pt-4 text-center d-flex flex-column  align-items-center \">\r\n          <h6 className=\"pb-lg-0 pb-3 mb-0 text-uppercase \"> A product by .</h6>\r\n          <Image className=\"img-fluid\" alt=\"ultracodes\" src={ultracodesLogo} width={180} height={150} />\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"4\" md=\"4\" lg=\"4\" className=\"px-0 ps-lg-5 pt-lg-0 pt-4\">\r\n          <h6 className=\"pb-lg-0\">Techbazaar</h6>\r\n          <ul className={`${styles.footerLinks}`}>\r\n            <li>\r\n              <Link href={\"/about-us\"} as=\"/about-us\" shallow>\r\n                About Us\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link href={\"/store\"} as=\"/store\">\r\n                Stores\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link href={\"/specs\"} as=\"/specs\">\r\n                Specs\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link href={\"/contact-us\"} as=\"/contact-us\">\r\n                Contact us\r\n              </Link>\r\n            </li>\r\n\r\n            <li>\r\n              <Link href={\"/privacy-policy\"} as=\"/privacy-policy\">\r\n                Privacy Policy\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </Col>\r\n        <Col md=\"12\" className=\"px-0 d-block d-lg-none\">\r\n          <hr className={`w-100 my-4 ${styles.separator}`} />\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"6\" md=\"6\" lg=\"5\" className=\"px-0\">\r\n          <Image className=\"img-fluid\" src={tblogoName} alt=\"logo\" width={110} height={30} />\r\n          {/* <h6 className=\"pb-lg-0 pb-2\">Techbazaar</h6> */}\r\n\r\n          <p>Our primary mission is to digitally transform the retail tech industry by bridging the gap between tech retailers and potential customers.</p>\r\n\r\n          <div className=\"d-flex gap-2 mt-4\">\r\n            <Image\r\n              className=\"cursor-pointer\"\r\n              onClick={() => {\r\n                window.open(\"https://www.facebook.com/techbazaar.com.pk?mibextid=LQQJ4d\", \"_blank\");\r\n              }}\r\n              src={facebook}\r\n              alt=\"facebook\"\r\n              width={22}\r\n              height={23}\r\n            />\r\n            <Image\r\n              onClick={() => {\r\n                window.open(\"https://www.youtube.com/@TechBazaar-bl5nl\", \"_blank\");\r\n              }}\r\n              className=\"cursor-pointer\"\r\n              src={youtube}\r\n              alt=\"youtube\"\r\n              width={22}\r\n              height={23}\r\n            />\r\n            <Image\r\n              onClick={() => {\r\n                window.open(\"https://www.instagram.com/techbazaar.com.pk/\", \"_blank\");\r\n              }}\r\n              className=\"cursor-pointer\"\r\n              src={instagram}\r\n              alt=\"instagram\"\r\n              width={22}\r\n              height={23}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <div>\r\n        <hr className={`w-100 my-4 ${styles.separator}`} />\r\n      </div>\r\n      <p className=\"text-center fs-12\">© {new Date().getFullYear()} Techbazaar. All Rights Reserved.</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","\"use client\";\r\nimport Image from \"next/image\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { Button, Dropdown, Form, Nav, NavDropdown, Navbar, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport styles from \"../styles/Header.module.css\";\r\nimport { tblogo, tblogoName } from \"../../public/images/index\";\r\nimport { openNavButton, closeNavButton, navHomeIcon, navLaptopIcon, navTriangleShape, navAccessoryIcon, navLEDIcon, navTabletIcon, navDesktopIcon, navMobileIcon, box, location } from \"../../public/icons/index\";\r\nimport { hanburger, favourite, userIcon, reserveIcon, search } from \"../../public/icons/index\";\r\nimport Link from \"next/link\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useRouter, usePathname } from \"next/navigation\";\r\nimport useAuth from \"./auth/useAuth\";\r\nimport { useUserStore } from \"../store/User\";\r\nimport { useWishlistStore } from \"../store/wishList\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faClose, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport { getCity, getCondition, getSearchSuggestions } from \"../app/apis/getApis\";\r\n\r\nconst navImageMap: { [key: string]: any } = {\r\n  LAPTOP: navLaptopIcon,\r\n  ACCESSORY: navAccessoryIcon,\r\n  \"TV MONITOR\": navLEDIcon,\r\n  TABLET: navTabletIcon,\r\n  DESKTOP: navDesktopIcon,\r\n  MOBILE: navMobileIcon,\r\n};\r\n\r\nconst capitalizeText = (text: string) => {\r\n  const words = text.split(\" \");\r\n  const newWords = words.map((value: string) => {\r\n    return value.slice(0, 1).toUpperCase() + value.slice(1, value.length).toLowerCase();\r\n  });\r\n  return newWords.join(\" \");\r\n};\r\n\r\nconst Header = ({ sandwichTriger, navData, handleOpenReservationOffcanvas, showClassicNav = false, handleOpenWishlistOffcanvas }: any) => {\r\n  // const [active, setActive] = useState<any>();\r\n  // const [navActive, setNavActive] = useState<any>();\r\n  const { Logout } = useAuth();\r\n  const { user, token } = useUserStore((state: any) => state);\r\n  const { wishlistItems, count } = useWishlistStore((list: any) => list);\r\n  const [smallScreenSearchShow, setSmallScreenSearchShow] = useState(false);\r\n  const router = useRouter();\r\n  const pathname = usePathname();\r\n\r\n  return (\r\n    <div className={`${pathname === \"/\" ? styles.navContainer : \"\"} border-bottom  `}>\r\n      <main className={`main`}>\r\n        <div bg=\"white\" className={` ${styles.nav_bar}`} expand=\"lg\">\r\n          <div className=\"d-flex  justify-content-between align-items-center w-100\">\r\n            <div className=\"d-flex align-items-center p-0\">\r\n              <div\r\n                className={`ps-3 pt-2 pe-2 d-lg-none    pb-2 text-center ${styles.hamburger} border-end`}\r\n                onClick={() => {\r\n                  sandwichTriger();\r\n                }}\r\n              >\r\n                <Image className=\"me-2\" alt=\"hamburger\" src={hanburger} height=\"15\" width={18} />\r\n              </div>\r\n              <Link href=\"/\">\r\n                <div className=\"d-flex  flex-nowrap ps-3\">\r\n                  <Image className={`me-2 ${styles.tblogo} `} src={tblogo} alt={\"Logo\"} height=\"32\" width={30} />\r\n                  <Image className={` d-lg-inline d-md-inline d-none d-sm-inline ${styles.tblogoName}`} src={tblogoName} alt={\"Logo name\"} height={30} width={135} />\r\n                </div>\r\n              </Link>\r\n            </div>\r\n\r\n            {pathname === \"/\" ? (\r\n              <Navbar as={motion.div} initial={{ y: -10, opacity: 0 }} whileInView={{ y: 0, opacity: 1 }} transition={{ type: \"tween\", duration: 0.5 }} className={`d-none ${showClassicNav ? \"d-lg-flex\" : \"\"} w-100 ps-3 d-flex justify-content-end`} id=\"classicNavbar\">\r\n                <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n                <Navbar.Collapse className={`${styles.navrow}`} id=\"navbarScroll\">\r\n                  <Nav className=\"me-auto my-2 my-lg-0\" style={{ maxHeight: \"100px\" }} navbarScroll>\r\n                    {navData &&\r\n                      navData.map((category: any, index: number) => (\r\n                        <NavDropdown as=\"span\" title={capitalizeText(category.label)} className={`w-100 text-capitalize ${styles.homeNavitem} ${styles.navitemActive} `} id={`NavItemLink${index}`}>\r\n                          {category.brands.map((brand: any, index: number) => (\r\n                            <NavDropdown.Item\r\n                              as={Link}\r\n                              key={brand.id}\r\n                              className={`d-grid  pb-3 ${styles.nav_content} ${(index + 1) % 7 === 0 ? \"\" : styles.nav_border} ${brand.has_items === 0 ? styles.disabledNavItem : \"\"}`}\r\n                              href={\r\n                                brand.has_items === 0\r\n                                  ? \"#\"\r\n                                  : `/products?${createParams([\r\n                                      [\"brand_ids\", `[${brand.id}]`],\r\n                                      [\"category_id\", category.id],\r\n                                    ])}`\r\n                              }\r\n                            >\r\n                              <motion.span\r\n                                initial={{ y: \"10px\", opacity: 0 }}\r\n                                whileInView={{ y: \"0px\", opacity: 1 }}\r\n                                transition={{\r\n                                  type: \"tween\",\r\n                                  duration: 0.2,\r\n                                }}\r\n                                className={`${styles.navsubitems} `}\r\n                              >\r\n                                {\" \"}\r\n                                {brand.label}\r\n                              </motion.span>\r\n                            </NavDropdown.Item>\r\n                          ))}\r\n                          <NavDropdown.Item className={`d-grid  pb-3 ${styles.nav_content}  ${(index + 1) % 7 === 0 ? \"\" : styles.nav_border}`} href={`/products?${createParams([[\"category_id\", category.id]])}`}>\r\n                            <motion.span\r\n                              initial={{ y: \"10px\", opacity: 0 }}\r\n                              whileInView={{ y: \"0px\", opacity: 1 }}\r\n                              transition={{\r\n                                type: \"tween\",\r\n                                duration: 0.2,\r\n                              }}\r\n                              className={`${styles.navsubitems} ${styles.navViewAllOption}`}\r\n                            >\r\n                              View All\r\n                            </motion.span>\r\n                          </NavDropdown.Item>\r\n                        </NavDropdown>\r\n                      ))}\r\n\r\n                    <NavDropdown\r\n                      title=\" Specs Central\"\r\n                      onClick={() => {\r\n                        router.push(\"/specs\");\r\n                      }}\r\n                      className={`me-3 w-100 mt-1 notArrow ${styles.homeNavitem} ${styles.navitemActivespecs} `}\r\n                      id=\"#action3\"\r\n                    >\r\n                      Specs Central\r\n                    </NavDropdown>\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n              </Navbar>\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            <motion.div\r\n              initial={{ y: -10, opacity: 0 }}\r\n              whileInView={{ y: 0, opacity: 1 }}\r\n              transition={{ type: \"tween\", duration: 0.5 }}\r\n              className={`${pathname === \"/\" && showClassicNav ? \"d-none\" : \"d-none d-lg-flex\"} w-100 ps-3 py-2 d-flex justify-content-between align-items-baseline`}\r\n              id=\"HeaderNavbar\"\r\n            >\r\n              <div>\r\n                <NavButton navData={navData} />\r\n              </div>\r\n              <div className=\"w-100 px-4\">\r\n                <SearchBar />\r\n              </div>\r\n              <div className=\"cursor-pointer\">\r\n                <div className=\"d-flex align-items-baseline gap-2 \">\r\n                  <Link className={`d-sm-inline d-none text-nowrap pe-1  ${styles.specs_central}`} href={`/specs`}>\r\n                    Specs Central\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n            <div className=\"d-flex d-lg-none\">\r\n              {smallScreenSearchShow ? (\r\n                \"\"\r\n              ) : (\r\n                <div\r\n                  className=\"d-flex me-3 align-items-center gap-2\"\r\n                  onClick={() => {\r\n                    setSmallScreenSearchShow(true);\r\n                  }}\r\n                >\r\n                  <div style={{ width: \"20px\", height: \"20px\" }}>\r\n                    <Image src={search} alt=\"search\" style={{ width: \"100%\", height: \"100%\" }} />\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {token ? (\r\n                <div\r\n                  className=\"d-flex me-3 align-items-center gap-2  cursor-pointer\"\r\n                  onClick={handleOpenWishlistOffcanvas}\r\n                  // onClick={() => {\r\n                  //   router.push(\"/wishlist\");\r\n                  // }}\r\n                >\r\n                  <span className=\"d-sm-inline d-none\">Wishlist</span>\r\n                  <div className=\"position-relative\" style={{ width: \"20px\", height: \"20px\" }}>\r\n                    <Image src={favourite} alt=\"favourite\" style={{ width: \"100%\", height: \"100%\" }} />\r\n                    <div\r\n                      className=\"position-absolute bg-white\"\r\n                      style={{\r\n                        top: \"0\",\r\n                        right: \"-50%\",\r\n                        borderRadius: \"50%\",\r\n                        width: \"20px\",\r\n                        height: \"20px\",\r\n                        textAlign: \"center\",\r\n                        justifyContent: \"center\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        boxShadow: \"0 0 1px black\",\r\n                      }}\r\n                    >\r\n                      <span\r\n                        className=\"link\"\r\n                        style={{\r\n                          fontSize: \"11px\",\r\n                        }}\r\n                      >\r\n                        {wishlistItems.length}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <div className=\"pe-3\">\r\n                {token ? (\r\n                  <>\r\n                    <Dropdown className=\"picon px-0\">\r\n                      <Dropdown.Toggle className=\"px-0 d-flex align-items-center gap-2\" variant=\"\" id=\"dropdown-basic\">\r\n                        <div style={{ width: \"20px\", height: \"20px\" }}>\r\n                          <Image src={userIcon} alt=\"user\" style={{ width: \"100%\", height: \"100%\" }} />\r\n                        </div>\r\n                        <span className=\"d-sm-inline\">{user?.first_name}</span>\r\n                      </Dropdown.Toggle>\r\n                      <Dropdown.Menu>\r\n                        <Dropdown.Item onClick={handleOpenReservationOffcanvas} href=\"#\">\r\n                          Reservations\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item\r\n                          onClick={() => {\r\n                            Logout();\r\n                          }}\r\n                          href=\"#\"\r\n                        >\r\n                          Logout\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>{\" \"}\r\n                  </>\r\n                ) : (\r\n                  <Link href={`/login?redirect=${pathname}`}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <div className=\"d-flex align-items-center\" style={{ width: \"20px\", height: \"20px\" }}>\r\n                        <Image src={userIcon} alt=\"user\" style={{ width: \"100%\", height: \"100%\" }} />\r\n                      </div>\r\n                      <span className=\"d-sm-inline\">Sign In</span>\r\n                    </div>\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {smallScreenSearchShow ? (\r\n        <div\r\n          className=\"d-block d-lg-none \"\r\n          style={{\r\n            backgroundColor: \"#EDF2FA\",\r\n          }}\r\n        >\r\n          <div className=\"main p-4 pe-0 d-flex flex-nowrap align-items-center \">\r\n            <SearchBar />\r\n            <FontAwesomeIcon\r\n              icon={faClose}\r\n              className=\"px-3\"\r\n              onClick={() => {\r\n                setSmallScreenSearchShow(false);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst createParams = (filters: any[]) => {\r\n  let paramss = new URLSearchParams();\r\n  filters.forEach((filter: [string, any]) => {\r\n    paramss.append(...filter);\r\n  });\r\n  return `params=${encodeURIComponent(paramss)}`;\r\n};\r\n\r\nconst SearchBar = ({}) => {\r\n  const [selectedCondition, setSelectedCondition] = useState<any>(null);\r\n  const [selectedLocation, setSelectedLocation] = useState<any>(null);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [openSuggestions, setOpenSuggestions] = useState(false);\r\n  const [searchKey, setSearchKey] = useState(\"\");\r\n  const pathname = usePathname();\r\n  const router = useRouter();\r\n  const suggestionDiv = useRef(null);\r\n  const cityDataQuery = useQuery({\r\n    queryKey: [\"nabSearchCity\"],\r\n    queryFn: getCity,\r\n  });\r\n  const conditionDataQuery = useQuery({\r\n    queryKey: [\"nabSearchCondition\"],\r\n    queryFn: getCondition,\r\n  });\r\n\r\n  const searchOnChangeHandle = (e: any) => {\r\n    setSearchInput(e.target.value.replace(/\\s+/g, \" \"));\r\n    if (e.target.value.replace(/\\s+/g, \" \").length > 0) {\r\n      setOpenSuggestions(true);\r\n    } else {\r\n      setOpenSuggestions(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setSearchKey(searchInput);\r\n    }, 200);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [searchInput]);\r\n\r\n  const searchSuggestionQuery = useQuery({\r\n    queryKey: [\"searchSuggestion\", searchKey],\r\n    queryFn: () => {\r\n      return getSearchSuggestions(searchKey);\r\n    },\r\n  });\r\n\r\n  const searchSubmitHandle = (e: any) => {\r\n    let paramss = new URLSearchParams();\r\n    if (searchInput.trim().length > 0) {\r\n      paramss.append(\"search\", searchInput.trim());\r\n    }\r\n    if (selectedCondition) {\r\n      paramss.append(\"condition_ids\", `[${selectedCondition.id}]`);\r\n    }\r\n    if (selectedLocation) {\r\n      paramss.append(\"city_id\", `${selectedLocation.id}`);\r\n    }\r\n    if (pathname === \"/products\") {\r\n      window.location.href = `/products?params=${encodeURIComponent(paramss)}`;\r\n    } else {\r\n      router.push(`/products?params=${encodeURIComponent(paramss)}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"position-relative w-100\">\r\n      <div className={`d-flex flex-nowrap rounded w-100 bg-white ${styles.searchBox}`} style={{ border: \"1px solid rgba(201, 201, 201, 1)\" }}>\r\n        <div className={`position-absolute d-flex align-items-center ps-2 ${styles.searchIconDiv}`}>\r\n          <Image alt=\"\" className=\"\" src={search} width={18} height={18} />\r\n        </div>\r\n        <input\r\n          type=\"search\"\r\n          value={searchInput}\r\n          onChange={searchOnChangeHandle}\r\n          onFocus={(e) => {\r\n            if (searchInput.length > 0) {\r\n              setOpenSuggestions(true);\r\n            }\r\n          }}\r\n          onBlur={(e: any) => {\r\n            setTimeout(() => {\r\n              setOpenSuggestions(false);\r\n            }, 300);\r\n          }}\r\n          className={`border-0 w-100 ${styles.searcInput}`}\r\n        />\r\n        <IconDropdown\r\n          icon={location}\r\n          data={\r\n            cityDataQuery?.data && cityDataQuery?.data?.data.body.data\r\n              ? [\r\n                  ...cityDataQuery?.data.data.body.data.map(({ city_id, city_name }: any) => ({\r\n                    id: city_id,\r\n                    label: city_name,\r\n                  })),\r\n                ]\r\n              : []\r\n          }\r\n          selectedOption={selectedLocation}\r\n          setSelectedOption={setSelectedLocation}\r\n        />\r\n        <IconDropdown icon={box} data={conditionDataQuery?.data && conditionDataQuery?.data?.data.body.data ? conditionDataQuery?.data.data.body.data : []} selectedOption={selectedCondition} setSelectedOption={setSelectedCondition} />\r\n        <Button className={`border-0  ${styles.searchButton}`} onClick={searchSubmitHandle}>\r\n          <FontAwesomeIcon icon={faSearch} />\r\n        </Button>\r\n      </div>\r\n      {openSuggestions ? (\r\n        <div className={` ${styles.suggestionMenue} position-absolute bg-white w-100 px-3 py-2 border rounded `} style={{ zIndex: \"1000\" }} ref={suggestionDiv}>\r\n          {searchSuggestionQuery?.data?.data.body.data.length > 0 ? (\r\n            searchSuggestionQuery?.data?.data.body.data.map((suggestion: any, index: number) => (\r\n              <div\r\n                className={`py-2 cursor-pointer ${styles.suggestionValues} ${searchSuggestionQuery?.data?.data.body.data.length - 1 === index ? \"\" : \"border-bottom\"}`}\r\n                onClick={(e: any) => {\r\n                  setSearchInput(suggestion.listing_title);\r\n                  setTimeout(() => {\r\n                    setOpenSuggestions(false);\r\n                  }, 100);\r\n                  e.stopPropagation();\r\n                }}\r\n              >\r\n                {suggestion.listing_title}\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <>No Suggestion Available</>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst IconDropdown = ({\r\n  icon,\r\n  data,\r\n  setSelectedOption = (e: any) => {\r\n    console.log(\"Selected\", e);\r\n  },\r\n  selectedOption = null,\r\n}: any) => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Dropdown>\r\n      <OverlayTrigger placement=\"top\" overlay={!!selectedOption ? <Tooltip>{selectedOption?.label}</Tooltip> : <></>}>\r\n        <Dropdown.Toggle className={`${styles.iconDropdown}`}>\r\n          <>\r\n            <Image width={40} height={20} alt=\"\" className={``} src={icon} />\r\n            {selectedOption ? <div className={styles.badge}></div> : <></>}\r\n          </>\r\n        </Dropdown.Toggle>\r\n      </OverlayTrigger>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item\r\n          className={`${styles.items} ${selectedOption === null ? styles.activeItem : \"\"}`}\r\n          onClick={() => {\r\n            setSelectedOption(null);\r\n          }}\r\n        >\r\n          All\r\n        </Dropdown.Item>\r\n        {data.map((option: any, index: number) => (\r\n          <>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item\r\n              className={`${styles.items} ${option.id === selectedOption?.id ? styles.activeItem : \"\"}`}\r\n              style={\r\n                data.length - 1 === index\r\n                  ? {\r\n                      borderBottom: \"0\",\r\n                    }\r\n                  : {}\r\n              }\r\n              onClick={() => {\r\n                setSelectedOption(option);\r\n              }}\r\n            >\r\n              {option.label}\r\n            </Dropdown.Item>\r\n          </>\r\n        ))}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nconst A = ({ children }: any) => {\r\n  return <a>{children}</a>;\r\n};\r\nconst NavButton = ({ navData }: any) => {\r\n  const [categoryHovered, setCategoryHovered] = useState<any | null>(null);\r\n  const pathname = usePathname();\r\n\r\n  return (\r\n    <>\r\n      <Dropdown style={{ position: \"relative\", cursor: \"pointer\" }}>\r\n        <Dropdown.Toggle className={`border-0 p-0  ${styles.navButtonBootstrap}`}>\r\n          <Image className={styles.openNavButton} src={openNavButton} alt=\"openNavButton\" width={35} height={35} />\r\n          <Image className={styles.closeNavButton} src={closeNavButton} alt=\"closeNavButton\" width={35} height={35} />\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu className={`${styles.navMenu}`}>\r\n          {navData &&\r\n            navData.map((category: any, index: number) => (\r\n              <>\r\n                <Dropdown.Item\r\n                  href={`/products?${createParams([[\"category_id\", category.id]])}`}\r\n                  onMouseEnter={() => {\r\n                    setCategoryHovered(index);\r\n                  }}\r\n                  key={index}\r\n                >\r\n                  <MainNavItem icon={navImageMap[category.label]} title={category.label} isArrowIcon={true} />\r\n                  {categoryHovered === index ? (\r\n                    <div className={`${styles.subNavContainer}`} style={{ position: \"absolute\" }}>\r\n                      <div className={`me-3 w-100 ${styles.navitem} `}>\r\n                        {category.brands.map((brand: any, index: number) => (\r\n                          <>\r\n                            {pathname !== \"/products\" ? (\r\n                              <Link\r\n                                key={index}\r\n                                href={\r\n                                  brand.has_items === 0\r\n                                    ? \"#\"\r\n                                    : `/products?${createParams([\r\n                                        [\"brand_ids\", `[${brand.id}]`],\r\n                                        [\"category_id\", category.id],\r\n                                      ])}`\r\n                                }\r\n                                className={`${styles.nav_content} ${(index + 1) % 7 === 0 ? \"\" : styles.nav_border} ${brand.has_items === 0 ? styles.disabledItem : \"\"}`}\r\n                              >\r\n                                <motion.span initial={{ y: \"10px\", opacity: 0 }} whileInView={{ y: \"0px\", opacity: 1 }} transition={{ type: \"tween\", duration: 0.2 }} className={`${styles.navsubitems}`}>\r\n                                  {brand.label}\r\n                                </motion.span>\r\n                              </Link>\r\n                            ) : (\r\n                              <a\r\n                                key={index}\r\n                                href={\r\n                                  brand.has_items === 0\r\n                                    ? \"#\"\r\n                                    : `/products?${createParams([\r\n                                        [\"brand_ids\", `[${brand.id}]`],\r\n                                        [\"category_id\", category.id],\r\n                                      ])}`\r\n                                }\r\n                                className={`${styles.nav_content} ${(index + 1) % 7 === 0 ? \"\" : styles.nav_border} ${brand.has_items === 0 ? styles.disabledItem : \"\"}`}\r\n                              >\r\n                                <motion.span initial={{ y: \"10px\", opacity: 0 }} whileInView={{ y: \"0px\", opacity: 1 }} transition={{ type: \"tween\", duration: 0.2 }} className={`${styles.navsubitems}`}>\r\n                                  {brand.label}\r\n                                </motion.span>\r\n                              </a>\r\n                            )}\r\n                          </>\r\n                        ))}\r\n                        <Link href={`/products?${createParams([[\"category_id\", category.id]])}`} className={`${styles.nav_content} ${styles.nav_border}`}>\r\n                          <motion.span initial={{ y: \"10px\", opacity: 0 }} whileInView={{ y: \"0px\", opacity: 1 }} transition={{ type: \"tween\", duration: 0.2 }} className={`${styles.navsubitems} link`}>\r\n                            View All\r\n                          </motion.span>\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </Dropdown.Item>\r\n                {navData.length - 1 === index ? <></> : <Dropdown.Divider />}\r\n              </>\r\n            ))}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </>\r\n  );\r\n};\r\n\r\nconst MainNavItem = ({ icon, title, isArrowIcon }: any) => {\r\n  return (\r\n    <div className={`d-flex justify-content-between ${styles.navMenuOption}`}>\r\n      <div className=\"d-flex align-items-center gap-2\">\r\n        <div\r\n          style={{\r\n            width: \"25px\",\r\n            height: \"25px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Image src={icon} alt={title + \"icon\"} style={{ width: \"100%\", height: \"100%\" }} />\r\n        </div>\r\n        <div className=\"d-sm-inline\">{title}</div>\r\n      </div>\r\n      {isArrowIcon ? (\r\n        <div className=\"\">\r\n          <Image src={navTriangleShape} alt=\"triangle icon\" width={10} height={10} />\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","\"use-client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Badge, Form, Offcanvas, Row, Col } from \"react-bootstrap\";\r\nimport styles from \"../styles/Offcanvas.module.css\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { getReservations } from \"../app/apis/getApis\";\r\nimport { useUserStore } from \"../store/User\";\r\nimport PaginationBar from \"./PaginationBar\";\r\nimport Image from \"next/image\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\nimport imagePlaceholder from \"../../public/images/imagePlaceholder.png\";\r\n\r\nconst ReservationCard = ({\r\n  listing_title,\r\n  listing_id,\r\n  img,\r\n  condition_item,\r\n  quantity,\r\n  online_discount,\r\n  online_price,\r\n  online_discount_unit,\r\n  handleClose,\r\n}: any) => {\r\n  const [imageSrc, setImageSrc] = useState<any>(img);\r\n  const calculatePrice = (price: any, discount: any, discountUnit: any) => {\r\n    if (discountUnit === \"percentage\") {\r\n      return price - price * (discount / 100);\r\n    } else if (discountUnit === \"fixed\") {\r\n      return price - discount;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Link\r\n      href={`/products/${listing_title\r\n        .replaceAll(\" \", \"-\")\r\n        .replaceAll(\"/\", \"--\")}-${listing_id}`}\r\n      onClick={() => handleClose()}\r\n    >\r\n      <Row className=\"p-1\">\r\n        <Col xs={12} className=\"my-1\">\r\n          <div className={`row ${styles.custom_card} px-1 py-2 `}>\r\n            <Col\r\n              xs={4}\r\n              className=\"img-container border rounded rounded-1 d-flex justify-content-center p-0\"\r\n            >\r\n              <Image\r\n                src={imageSrc}\r\n                alt=\"productImage\"\r\n                height={100}\r\n                width={120}\r\n                sizes=\"100vw\"\r\n                style={{ objectFit: \"contain\" }}\r\n                onError={(e) => {\r\n                  setImageSrc(`${imagePlaceholder.src}`);\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col xs={8} className={`${styles.custom_card_body}`}>\r\n              <Row>\r\n                <p className={`${styles.custom_card_title}`}>{listing_title}</p>\r\n              </Row>\r\n              <Col xs={12}>\r\n                <div className={`d-flex justify-content-between`}>\r\n                  <div>\r\n                    <Badge\r\n                      pill\r\n                      text=\"dark\"\r\n                      bg=\"lavender\"\r\n                      style={{ background: \"lavender\" }}\r\n                    >\r\n                      {condition_item}\r\n                    </Badge>\r\n                  </div>\r\n                  <p className={`m-0`}>Quantity: {quantity}</p>\r\n                </div>\r\n              </Col>\r\n              <Row className=\"my-1\">\r\n                {online_discount > 0 ? (\r\n                  <>\r\n                    <Col\r\n                      xs={6}\r\n                      className=\"text-decoration-line-through text-muted\"\r\n                    >\r\n                      <p className=\"m-0\">Rs. {online_price}</p>\r\n                    </Col>\r\n                    <Col xs={6} className=\"fw-bold text-end\">\r\n                      <p className=\"m-0\">\r\n                        Rs.{\" \"}\r\n                        {`${calculatePrice(\r\n                          online_price,\r\n                          online_discount,\r\n                          online_discount_unit\r\n                        )?.toLocaleString(\"en-IN\")}`}\r\n                      </p>\r\n                    </Col>\r\n                  </>\r\n                ) : (\r\n                  <Col xs={12} className=\"\">\r\n                    <p className=\"fw-bold m-0 text-end\">Rs. {online_price}</p>\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n            </Col>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Link>\r\n  );\r\n};\r\n\r\nfunction ReservationOffcanvas({ show, handleClose }: any) {\r\n  const [status, setStatus] = useState(\"Pending\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [noOfPages, setNoOfPages] = useState<null | number>(1);\r\n  const [reservationsData, setReservationsData] = useState<any>();\r\n  const [noOfItems, setNoOfItems] = useState<null | number>();\r\n  const [sizeOfPages, setSizeOfPages] = useState(10);\r\n  const { user, token } = useUserStore((state: any) => state);\r\n  const userId = user?.uuid;\r\n  const router = useRouter();\r\n\r\n  const getReservationsData = useQuery({\r\n    queryKey: [\"reservations\", [userId, status, show]],\r\n    queryFn: () => getReservations(token, status),\r\n    enabled: !!userId,\r\n    onSuccess: (data: any) => {\r\n      setReservationsData(data?.data?.body?.data);\r\n      setNoOfPages(data?.data.body?.paginationInfo?.totalPages);\r\n      setNoOfItems(data?.data?.body?.paginationInfo?.totalItems);\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    if (show === true) {\r\n      setStatus(\"Pending\");\r\n      getReservationsData.refetch();\r\n    }\r\n  }, [show]);\r\n  const changePage = (page: any) => {\r\n    setCurrentPage(page);\r\n    window.scrollTo(0, 500);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Offcanvas show={show} onHide={handleClose} placement=\"end\">\r\n        <Offcanvas.Header closeButton>\r\n          <Offcanvas.Title>Reservation Details</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body>\r\n          <>\r\n            <Form.Select\r\n              className=\"d-block w-50 ms-auto mb-3\"\r\n              aria-label=\"Default select example\"\r\n              value={status}\r\n              defaultValue=\"\"\r\n              onChange={(e) => {\r\n                console.log(e.target.value);\r\n                let value = e.target.value;\r\n                if (value === \"Pending\") {\r\n                  setStatus(\"Pending\");\r\n                } else if (value === \"Done\") {\r\n                  setStatus(\"Done\");\r\n                }\r\n              }}\r\n            >\r\n              <option id=\"status\" value=\"Pending\">\r\n                Pending\r\n              </option>\r\n              <option id=\"status\" value=\"Done\">\r\n                Done\r\n              </option>\r\n            </Form.Select>\r\n            {getReservationsData?.data?.data?.body?.data?.map(\r\n              (data: any, index: number) => (\r\n                <>\r\n                  <ReservationCard\r\n                    key={index}\r\n                    listing_title={data?.listings?.listing_title}\r\n                    listing_id={data.listing_id}\r\n                    img={data?.items?.itemImages?.img0}\r\n                    condition_item={data?.items?.condition_item}\r\n                    quantity={data?.quantity}\r\n                    online_discount={data?.listings?.online_discount}\r\n                    online_price={data?.listings?.online_price}\r\n                    online_discount_unit={data?.listings?.online_discount_unit}\r\n                    handleClose={handleClose}\r\n                  />\r\n                </>\r\n              )\r\n            )}\r\n            {getReservationsData?.data?.data?.body?.data?.length > 0 && (\r\n              <PaginationBar\r\n                noOfPages={noOfPages}\r\n                currentPage={currentPage}\r\n                changePage={changePage}\r\n              />\r\n            )}\r\n          </>\r\n          {getReservationsData?.data?.data?.body?.data?.length === 0 && (\r\n            <h5 className=\"d-flex justify-content-center mt-5\">\r\n              No Result Found!\r\n            </h5>\r\n          )}\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReservationOffcanvas;\r\n","\"use-client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Badge, Offcanvas, Button, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport styles from \"../styles/Offcanvas.module.css\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { getUserWishlist } from \"../app/apis/getApis\";\r\nimport { useUserStore } from \"../store/User\";\r\nimport PaginationBar from \"./PaginationBar\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport { useWishlistStore } from \"../store/wishList\";\r\nimport { ellipsis, location } from \"../../public/icons\";\r\nimport WishlistIcon from \"./WishlistIcon\";\r\nimport ReserveDetails from \"./ReserveDetails\";\r\nimport SignInModal from \"./SignInModal\";\r\nimport imagePlaceholder from \"../../public/images/imagePlaceholder.png\";\r\n\r\nfunction WishlistOffcanvas({ show, handleClose }: any) {\r\n  const { user, token } = useUserStore((state: any) => state);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [noOfPages, setNoOfPages] = useState<null | number>(1);\r\n  const [noOfItems, setNoOfItems] = useState<null | number>();\r\n  const [sizeOfPages, setSizeOfPages] = useState(10);\r\n  const { count } = useWishlistStore((store: any) => store);\r\n  const [loading, setLoading] = useState(false);\r\n  const [items, setItems] = useState<any>();\r\n  const [actionOverlay, setActionOverlay] = useState(null);\r\n\r\n  const getItems = useQuery({\r\n    queryKey: [\"wishlistItems\", { user, currentPage, count, show }],\r\n    queryFn: () => getUserWishlist(token, user?.uuid, currentPage, 10),\r\n    enabled: !!user,\r\n    refetchOnWindowFocus: true,\r\n    keepPreviousData: true,\r\n    onSuccess: (data: any) => {\r\n      setItems(data.data.body.data);\r\n      setNoOfPages(data?.data.body?.paginationInfo?.totalPages);\r\n      setNoOfItems(data?.data?.body?.paginationInfo?.totalItems);\r\n    },\r\n  });\r\n  const changePage = (page: any) => {\r\n    setCurrentPage(page);\r\n    window.scrollTo(0, 500);\r\n  };\r\n\r\n  const onHide = () => {\r\n    setActionOverlay(null);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Offcanvas show={show} onHide={onHide} placement=\"end\" onClick={() => setActionOverlay(null)}>\r\n        <Offcanvas.Header closeButton>\r\n          <Offcanvas.Title>Saved Items</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body>\r\n          <>\r\n            <p className=\"d-block text-align-left\">{noOfItems} Saved Items</p>{\" \"}\r\n            <div className=\"container\" onClick={(e) => e.stopPropagation()}>\r\n              {getItems?.data?.data?.body?.data?.map((data: any, index: number) => (\r\n                <Wishlist\r\n                  index={index}\r\n                  listingId={data?.fk_listing_id}\r\n                  item={data?.listings.item}\r\n                  img={data?.listings.item.itemImages.img0}\r\n                  title={data?.listings.listing_title}\r\n                  condition={data?.listings?.item.condition_item}\r\n                  loading={getItems?.isLoading}\r\n                  key={data?.fk_listing_id}\r\n                  discount={parseInt(data?.listings?.online_discount)}\r\n                  discountUnit={data?.listings?.online_discount_unit}\r\n                  activationDate={data?.listings?.activation_date}\r\n                  isDeleted={data?.listings?.is_deleted}\r\n                  archivedOn={data?.listings?.archived_on}\r\n                  price={data?.listings?.online_price}\r\n                  listedQuantity={data?.listings?.listed_quantity}\r\n                  closeOffcanvas={handleClose}\r\n                  actionOverlay={actionOverlay}\r\n                  setActionOverlay={setActionOverlay}\r\n                />\r\n              ))}\r\n            </div>\r\n            {getItems?.data?.data?.body?.data?.length > 0 && <PaginationBar noOfPages={noOfPages} currentPage={currentPage} changePage={changePage} />}\r\n          </>\r\n          {getItems?.data?.data?.body?.data?.length === 0 && <h5 className=\"d-flex justify-content-center mt-5\">No Result Found!</h5>}\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WishlistOffcanvas;\r\n\r\ninterface heightType {\r\n  height: {\r\n    delay: number;\r\n    duration: number;\r\n  };\r\n}\r\ninterface productProp {\r\n  index: number;\r\n  loading?: Boolean;\r\n  title: String;\r\n  price: number;\r\n  condition: string;\r\n  discount?: number | undefined;\r\n  discountUnit?: string;\r\n  activationDate: any;\r\n  archivedOn: any;\r\n  isDeleted: any;\r\n  item: {\r\n    item_id: number;\r\n    shopTable: any;\r\n    location: any;\r\n    itemImages: any;\r\n    location_id: number;\r\n  };\r\n  img: any;\r\n  listingId: number;\r\n  listedQuantity: number;\r\n  closeOffcanvas: any;\r\n  actionOverlay: number | null;\r\n  setActionOverlay: any;\r\n}\r\nconst Wishlist: React.FC<productProp> = ({ index, item, loading, img, title, price, condition, discount, listingId, discountUnit, activationDate, archivedOn, isDeleted, listedQuantity, closeOffcanvas, actionOverlay, setActionOverlay }) => {\r\n  const [reserveModal, setReserveModal] = useState(false);\r\n  const [signInModal, setSignInModal] = useState(false);\r\n  const [imageSrc, setImageSrc] = useState<any>(img);\r\n  const calculatePrice = (price: any, discount: any, discountUnit: any) => {\r\n    if (discountUnit === \"percentage\") {\r\n      return price - price * (discount / 100);\r\n    } else if (discountUnit === \"fixed\") {\r\n      return price - discount;\r\n    }\r\n  };\r\n  const handleReserveModal = () => {\r\n    setReserveModal(true);\r\n  };\r\n  const handleActionOverlay = (id: number | null) => {\r\n    setActionOverlay(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`${styles.custom_card} position-relative px-1 py-1 mb-3`}>\r\n        {actionOverlay === index ? (\r\n          <div className=\"position-absolute w-100 h-100 d-flex justify-content-center border-rounded top-0 start-0 align-items-center\" style={{ borderRadius: \"5px\", background: \"#0000007F\" }}>\r\n            <div className=\"position-relative d-flex justify-content-between gap-2\" style={{ color: \"white\", height: \"35px\" }}>\r\n              {activationDate === null || archivedOn !== null || isDeleted === true ? (\r\n                \"\"\r\n              ) : (\r\n                <Button variant=\"primary\" onClick={handleReserveModal}>\r\n                  Reserve\r\n                </Button>\r\n              )}\r\n              <Link href={`/store/${item?.shopTable?.username.replaceAll(\" \", \"-\").replaceAll(\"/\", \"--\")}`}>\r\n                <Button onClick={closeOffcanvas}>Visit Stop</Button>\r\n              </Link>\r\n              <WishlistIcon top=\"0px\" right=\"0px\" listingId={listingId} title={title} savedPage={true} />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <Link href={`/products/${title.replaceAll(\" \", \"-\").replaceAll(\"/\", \"--\")}-${listingId}`} className={styles.linktag} onClick={closeOffcanvas}>\r\n          <div className=\"d-flex justify-content-start w-100\">\r\n            <div style={{ maxWidth: \"120px\" }}>\r\n              <div className=\"img-container border rounded rounded-1 d-flex justify-content-center p-0 w-100\">\r\n                <Image\r\n                  src={imageSrc}\r\n                  alt=\"productImage\"\r\n                  height={100}\r\n                  width={120}\r\n                  style={{ objectFit: \"contain\" }}\r\n                  onError={(e) => {\r\n                    setImageSrc(`${imagePlaceholder.src}`);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className={`ps-1 ${styles.wishlist_card_body}`}>\r\n              <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"tooltip\">{title}</Tooltip>}>\r\n                <div className={`${styles.wishlist_card_title}`}>{title}</div>\r\n              </OverlayTrigger>\r\n              <div>\r\n                <div className={`d-flex justify-content-between mt-2`}>\r\n                  <div>\r\n                    <Badge pill text=\"dark\" bg=\"lavender\" style={{ background: \"lavender\" }}>\r\n                      {condition}\r\n                    </Badge>\r\n                  </div>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <Image className=\"me-1 rounded-2\" src={location} alt=\"location\" height=\"12\" width=\"10\" />\r\n                    <p className={`m-0`}>{item?.location?.city?.city_name}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mb-2 d-flex justify-content-between\">\r\n                  <div>{Number(discount) > 0 && <span className={`ms-1 discount`}>Rs {price}</span>}</div>\r\n                  <div className=\"fw-bold text-end\">Rs. {activationDate === null || archivedOn !== null || isDeleted === true ? \"--\" : `${calculatePrice(price, discount, discountUnit)?.toLocaleString(\"en-IN\")}`}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n        <div>\r\n          <span className=\"position-absolute top-0 end-0 p-2 cursor-pointer bg-white  d-flex justify-content-center align-items-center\" style={{ borderRadius: \"0 5px\", height: \"40px\", width: \"37px\" }} onClick={() => (actionOverlay === index ? handleActionOverlay(null) : handleActionOverlay(index))}>\r\n            {actionOverlay === index ? <button type=\"button\" className=\"btn-close\"></button> : <Image src={ellipsis} alt=\"actions\" />}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <ReserveDetails\r\n        show={reserveModal}\r\n        onHide={() => setReserveModal(false)}\r\n        reserveData={{\r\n          shop_id: item?.shopTable?.shop_id,\r\n          locationId: item.location_id,\r\n          listingId: listingId,\r\n          itemId: item?.item_id,\r\n          listedQuantity,\r\n        }}\r\n      />\r\n      <SignInModal title=\" To Reserve this item, please create an account.\" show={signInModal} onHide={() => setSignInModal(false)} />\r\n    </>\r\n  );\r\n};\r\n","\"use client\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Sidebar } from \"..\";\r\nimport Topbar from \"../Topbar\";\r\nimport Footer from \"../Footer\";\r\nimport Header from \"../Header\";\r\nimport { useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport { getNavMenuData } from \"../../app/apis/getApis\";\r\nimport ReservationOffcanvas from \"../ReservationOffcanvas\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport WishlistOffcanvas from \"../WishlistOffcanvas\";\r\n\r\nconst Layout = ({ children }: any) => {\r\n  const [isMounted, setIsMounted] = useState(false);\r\n  const [isReservationOffcanvasOpen, setIsReservationOffcanvasOpen] =\r\n    useState(false);\r\n  const [isWishlistOffcanvasOpen, setIsWishlistOffcanvasOpen] = useState(false);\r\n\r\n  const pathname = usePathname();\r\n\r\n  const [showHomeNavbar, setShowHomeNavbar] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const heroBanner = document.getElementById(\"heroBanner\");\r\n      if (heroBanner) {\r\n        const offset = heroBanner.offsetHeight;\r\n        setShowHomeNavbar(window.scrollY <= offset);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"scroll\", handleScroll);\r\n\r\n    // Cleanup the event listener on component unmount\r\n    return () => {\r\n      document.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const handleOpenReservationOffcanvas = () => {\r\n    setIsReservationOffcanvasOpen((prev) => !prev);\r\n  };\r\n  const handleCloseOffcanvas = () => {\r\n    setIsReservationOffcanvasOpen(false);\r\n  };\r\n\r\n  const [isSandwichOpen, setisSandwichOpen] = useState(false);\r\n\r\n  const navDataQuery = useQuery({\r\n    queryKey: [\"navMenuData\"],\r\n    queryFn: getNavMenuData,\r\n  });\r\n\r\n  const sandwichTriger = () => {\r\n    setisSandwichOpen((prev) => !prev);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsMounted(true);\r\n  }, []);\r\n  if (!isMounted) {\r\n    return null;\r\n  }\r\n\r\n  const handleOpenWishlistOffcanvas = () => {\r\n    setIsWishlistOffcanvasOpen((prev) => !prev);\r\n  };\r\n  const handleCloseWishlistOffcanvas = () => {\r\n    setIsWishlistOffcanvasOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      {pathname.includes(\"login\") || pathname.includes(\"signup\") ? (\r\n        <></>\r\n      ) : (\r\n        <>\r\n          <Sidebar\r\n            setisSandwichOpen={setisSandwichOpen}\r\n            isSandwichOpen={isSandwichOpen}\r\n            navData={navDataQuery?.data?.data.body.data}\r\n          />\r\n          <Topbar\r\n            handleOpenReservationOffcanvas={handleOpenReservationOffcanvas}\r\n            handleOpenWishlistOffcanvas={handleOpenWishlistOffcanvas}\r\n          />\r\n          <Header\r\n            sandwichTriger={sandwichTriger}\r\n            navData={navDataQuery?.data?.data.body.data}\r\n            handleOpenReservationOffcanvas={handleOpenReservationOffcanvas}\r\n            showClassicNav={showHomeNavbar}\r\n            handleOpenWishlistOffcanvas={handleOpenWishlistOffcanvas}\r\n          />\r\n        </>\r\n      )}\r\n      <>{children}</>\r\n      {pathname.includes(\"login\") || pathname.includes(\"signup\") ? (\r\n        <></>\r\n      ) : (\r\n        <>\r\n          <Footer />\r\n          <ReservationOffcanvas\r\n            show={isReservationOffcanvasOpen}\r\n            handleClose={handleCloseOffcanvas}\r\n          />{\" \"}\r\n          <WishlistOffcanvas\r\n            show={isWishlistOffcanvasOpen}\r\n            handleClose={handleCloseWishlistOffcanvas}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { faRightFromBracket, faUserPen } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { profile, tblogo, tblogoName } from \"../../../public/images\";\r\nimport styles from \"../../styles/Sidebar.module.css\";\r\nimport Image from \"next/image\";\r\nimport { Accordion, Button, Dropdown, Offcanvas } from \"react-bootstrap\";\r\nimport Link from \"next/link\";\r\nimport { usePathname, useRouter } from \"next/navigation\";\r\nconst Sidebar = ({ isSandwichOpen, setisSandwichOpen, navData }: any) => {\r\n  // const wrapperRef = useRef(null);\r\n  // useOutsideAlerter(wrapperRef, setIsSandwichOpen);\r\n  const [domLoaded, setDomLoaded] = useState(false);\r\n  const router = useRouter();\r\n  const handleCanvasClose = () => {\r\n    setisSandwichOpen(false);\r\n  };\r\n  useEffect(() => {\r\n    setDomLoaded(true);\r\n  }, []);\r\n  const pathname = usePathname();\r\n  const createParams = (filters: any[]) => {\r\n    let paramss = new URLSearchParams();\r\n    filters.forEach((filter: [string, any]) => {\r\n      paramss.append(...filter);\r\n    });\r\n    return `params=${encodeURIComponent(paramss)}`;\r\n  };\r\n  const A = ({ children }: any) => {\r\n    return <a>{children}</a>;\r\n  };\r\n  return (\r\n    <>\r\n      <Offcanvas show={isSandwichOpen} onHide={handleCanvasClose} className=\"d-block d-lg-none\" backdropClassName=\"d-block d-lg-none\">\r\n        <Offcanvas.Header closeButton>\r\n          <Link href=\"/\">\r\n            <Offcanvas.Title>\r\n              <div className=\"d-flex  flex-nowrap ps-1\">\r\n                <Image className={`me-2 ${styles.tblogo} `} src={tblogo} alt={\"Logo\"} height=\"32\" width={30} />\r\n                <Image className={` d-lg-inline d-md-inline d-none d-sm-inline ${styles.tblogoName}`} src={tblogoName} alt={\"Logo name\"} height={30} width={135} />\r\n              </div>\r\n            </Offcanvas.Title>\r\n          </Link>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body>\r\n          <Accordion>\r\n            {navData &&\r\n              navData.map((category: any) => (\r\n                <Accordion.Item className={styles.acor_item} eventKey={category.id}>\r\n                  <Accordion.Header className={`${styles.nav_header}`}>\r\n                    <div  >\r\n                      {category.label}\r\n                    </div>\r\n                  </Accordion.Header>\r\n                  <Accordion.Body className={`${styles.accordianBodyContainer}`} style={{ height: \"35vh\", overflowY: \"auto\" }}>\r\n                    <div className=\"d-grid\">\r\n                      {category.brands.slice(0, 10).map((brand: any, index: number) => (\r\n                        <div className={` d-flex justify-content-between p-3 border-bottom ${brand.has_items === 0 ? \"text-muted \" : \"cursor-pointer\"}`} onClick={handleCanvasClose}>\r\n                          {pathname !== \"/products\" ? (\r\n                            <Link\r\n                              href={\r\n                                brand.has_items === 0\r\n                                  ? \"#\"\r\n                                  : `/products?${createParams([\r\n                                      [\"brand_ids\", `[${brand.id}]`],\r\n                                      [\"category_id\", category.id],\r\n                                    ])}`\r\n                              }\r\n                              className=\"w-100\"\r\n                            >\r\n                              {brand.label}\r\n                            </Link>\r\n                          ) : (\r\n                            <Link\r\n                              href={\r\n                                brand.has_items === 0\r\n                                  ? \"#\"\r\n                                  : `/products?${createParams([\r\n                                      [\"brand_ids\", `[${brand.id}]`],\r\n                                      [\"category_id\", category.id],\r\n                                    ])}`\r\n                              }\r\n                              className=\"w-100\"\r\n                            >\r\n                              {brand.label}\r\n                            </Link>\r\n                          )}\r\n                        </div>\r\n                      ))}\r\n                      <div className={` d-flex justify-content-between p-3 `} onClick={handleCanvasClose}>\r\n                        <Link href={`/products?${createParams([[\"category_id\", category.id]])}`} className=\"w-100 link\">\r\n                          View All\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n              ))}\r\n            <div className={styles.specsCentralSidebar}>\r\n              <h2>\r\n                <button>\r\n                  <Link href={`/specs`} onClick={handleCanvasClose}>\r\n                    SPECS CENTRAL\r\n                  </Link>\r\n                </button>\r\n              </h2>\r\n            </div>\r\n          </Accordion>\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","\"use client\";\r\nimport Image from \"next/image\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Badge, Button, Card, Col, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { ColorIcon, location, shopIcon } from \"../../public/icons/index\";\r\nimport ReserveDetails from \"./ReserveDetails\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport LoadingCard from \"./LoadingCard\";\r\nimport ContactSellerModal from \"./ContactSellerModal\";\r\nimport SignInModal from \"./SignInModal\";\r\nimport Link from \"next/link\";\r\nimport WishlistIcon from \"./WishlistIcon\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport styles from \"../styles/ProductCard.module.css\";\r\nimport imagePlaceholder from \"../../public/images/imagePlaceholder.png\";\r\nimport { log } from \"console\";\r\ninterface shopDetails {\r\n  shop_name: string;\r\n  owner_whatsapp_number: string;\r\n}\r\ninterface productProp {\r\n  recomended?: boolean;\r\n  loading?: Boolean;\r\n  title: String;\r\n  price: number;\r\n  condition: string;\r\n  discount?: number | undefined;\r\n  item: {\r\n    item_id: number;\r\n    shopTable: any;\r\n    location: any;\r\n    itemImages: any;\r\n    location_id: number;\r\n  };\r\n  listingId: number;\r\n  isRecommendationCards:boolean,\r\n}\r\n\r\ninterface heightType {\r\n  height: {\r\n    delay: number;\r\n    duration: number;\r\n  };\r\n}\r\n\r\nconst ProductCard: React.FC<productProp> = ({ isRecommendationCards, item, loading, title, price, condition, discount, listingId,  discount_unit, color }) => {\r\n  // const [color,setColor]=useState()\r\n  const shopDetails = item?.shopTable;\r\n  const locations = item?.location;\r\n  const image = item?.itemImages?.img0;\r\n  const locationId = item?.location_id;\r\n  const city = item?.location?.city?.city_name;\r\n  const shopUsername = item.shopTable.username;\r\n  console.log(discount,discount_unit,'discount')\r\n\r\n\r\n  const [reserveModal, setReserveModal] = useState(false);\r\n  const [contactModal, setContactModal] = useState(false);\r\n  const [signInModal, setSignInModal] = useState(false);\r\n\r\n  const router = useRouter();\r\n  const handleReserveModal = () => {\r\n    setReserveModal(true);\r\n  };\r\n\r\n  const handleContactModal = () => {\r\n    setContactModal(true);\r\n  };\r\n\r\n  const calculateDiscountedPrice = () => {\r\n    if (price < 0 || discount < 0) {\r\n      // Handle invalid input\r\n      return null;\r\n    }\r\n    if (discount_unit == \"percentage\") {\r\n      let discountAmount = (price * discount) / 100;\r\n      let discountedPrice = price - discountAmount;\r\n      return discountedPrice;\r\n    } else if (discount_unit == \"fixed\") {\r\n      let discountedPrice = price - discount;\r\n      return discountedPrice;\r\n    }\r\n  };\r\n\r\n\r\n  const discountedPrice = calculateDiscountedPrice();\r\n  return (\r\n    <Col className=\"mt-4 gx-3 gy-2\" lg=\"4\" xl=\"3\" md=\"4\" sm=\"6\" xs=\"12\">\r\n      {loading ? (\r\n        <LoadingCard />\r\n      ) : (\r\n        <Card className=\"h-100 rounded-3 shadow-sm\" style={{maxHeight:'300px'}}>\r\n    \r\n            <div className=\"card-container position-relative  \">\r\n              <div className=\"row p-0 mx-0 \">\r\n                <div className=\"position-relative\" id=\"card-img-container\" style={{ height: \"164px\",maxHeight:'200px' }}>\r\n                <Link href={`/products/${title.replaceAll(\" \", \"-\").replaceAll(\"/\", \"--\")}-${listingId}`}>\r\n                  <motion.img\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    transition={{ delay: 0.3, duration: 0.4 }}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                      objectFit: \"contain\",\r\n                      aspectRatio: \"16/9\",\r\n                    }}\r\n                    className=\"p-0\"\r\n                    src={image}\r\n                    alt=\"productImg\"\r\n                    onError={(e) => (e.target.src = `${imagePlaceholder.src}`)}\r\n                    // onClick={() => router.push(`/products/${title.replaceAll(\" \", \"-\").replaceAll(\"/\", \"--\")}-${listingId}`)}\r\n                  />\r\n                  </Link>\r\n                  <div className=\"d-flex justify-content-between align-items-center\"></div>\r\n                </div>\r\n              </div>\r\n              <div className=\"  rounded-circle text-center position-absolute top-0 end-0 m-0 p-0\">\r\n                <WishlistIcon listingId={listingId} title={title} />\r\n              </div>\r\n              <div className={`text-center position-absolute top-0 start-0 d-flex justify-content-center align-items-center`} style={{ border: \"1px 1px 1px 0 solid #D8E4F8\", borderTopLeftRadius: \"7px\", borderBottomLeftRadius: \"0\", borderBottomRightRadius: \"7px\", background: \"#D957F9B3\" }}>\r\n                <p className=\"m-0 fs-9 py-1 fw-bold p-2 text-white\" style={{ fontSize: \"0.7rem\" }}>\r\n                  {condition}\r\n                </p>\r\n              </div>\r\n              <Link href={`/products/${title.replaceAll(\" \", \"-\").replaceAll(\"/\", \"--\")}-${listingId}`}>\r\n\r\n              <Card.Body className=\"px-2 py-1 mt-0\">\r\n                <div className=\"row align-items-start product-title-row\" style={{ height: \"3rem\" }}>\r\n                  <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"tooltip\">{title}</Tooltip>}>\r\n                    <p className={`${styles.product_title} `}>{title}</p>\r\n                  </OverlayTrigger>\r\n                </div>\r\n                <div className=\"d-flex flex-row m-0 p-0 flex-wrap\" style={{height:'1.5rem'}}>\r\n                  <p className=\"fw-bold m-0 me-2 fw-700 fs-16\">\r\n                    <span className=\"\">Rs. </span>\r\n                    {discountedPrice ? discountedPrice.toLocaleString() : price.toLocaleString()}\r\n                  </p>\r\n                  <div className=\"text-decoration-line-through text-muted fw-500 fs-16\">{discountedPrice && discount!==0  ? `Rs. ${price.toLocaleString()}` : null}</div>\r\n                </div>\r\n              </Card.Body>\r\n                        </Link>\r\n\r\n            </div>\r\n            {isRecommendationCards?null:(\r\n            <div  style={{height:'3rem'}} className=\"mx-2 align-items-center d-flex justify-content-between  fs-9 \">\r\n              <Link className=\"d-flex text-end align-middle gap-1  \" href={`/store/${shopUsername}`}>\r\n                <img src={shopIcon.src} />{\" \"}\r\n                <span className={`${styles.store} text-decoration-none`} >\r\n                  Visit Store\r\n                </span>\r\n              </Link>\r\n\r\n            <div className=\"col text-end align-middle\">\r\n              <img src={location.src} /> <span>{city}</span>\r\n            </div>\r\n          </div>)}\r\n          \r\n        </Card>\r\n      )}\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import React, { useCallback, useEffect, useState, useRef } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MultiRangeSlider = ({ min, max, minValue, maxValue, onChange }:any) => {\r\n  const [minVal, setMinVal] = useState(Number(min));\r\n  const [maxVal, setMaxVal] = useState(Number(max));\r\n  const minValRef = useRef<any>(null);\r\n  const maxValRef = useRef<any>(null);\r\n  const range = useRef<any>(null);\r\n\r\n  // Convert to percentage\r\n  const getPercent = useCallback(\r\n    (value:any) => Math.round(((value - min) / (max - min)) * 100),\r\n    [min, max]\r\n  );\r\n  useEffect(() => {\r\n    setMinVal(minValue);\r\n    setMaxVal(maxValue);\r\n  }, [minValue, maxValue]);\r\n\r\n  // Set width of the range to decrease from the left side\r\n  useEffect(() => {\r\n    if (maxValRef.current ) {\r\n      const minPercent = getPercent(minVal);\r\n      const maxPercent = getPercent(+maxValRef?.current?.value); // Preceding with '+' converts the value from type string to type number\r\n\r\n      if (range.current) {\r\n        range.current.style.left = `Rs. {minPercent}%`;\r\n        range.current.style.width = `Rs. {maxPercent - minPercent}%`;\r\n      }\r\n    }\r\n  }, [minVal, getPercent]);\r\n\r\n  // Set width of the range to decrease from the right side\r\n  useEffect(() => {\r\n    if (minValRef.current) {\r\n      const minPercent = getPercent(+minValRef.current.value);\r\n      const maxPercent = getPercent(maxVal);\r\n\r\n      if (range.current) {\r\n        range.current.style.width = `Rs. {maxPercent - minPercent}%`;\r\n      }\r\n    }\r\n  }, [maxVal, getPercent]);\r\n\r\n  // Get min and max values when their state changes\r\n  useEffect(() => {\r\n    onChange({ min: minVal, max: maxVal });\r\n  }, [minVal, maxVal,]);\r\n\r\n  return (\r\n    <div className=\"container mt-4 mb-2\">\r\n      <div className=\"d-flex mb-0 fs-14 justify-content-center\">\r\n        {\" \"}\r\n         <p className=\"secondary-link fw-500 mx-2\"> Rs. {minVal?.toLocaleString(\"en-IN\")}</p> to{\" \"}\r\n        <p className=\"secondary-link fw-500 mx-2\"> Rs. {maxVal?.toLocaleString(\"en-IN\")}</p>\r\n      </div>\r\n      <datalist id=\"steplist\">\r\n        <option>0</option>\r\n        <option>25</option>\r\n        <option>50</option>\r\n        <option>75</option>\r\n        <option>100</option>\r\n      </datalist>\r\n      <input\r\n        type=\"range\"\r\n        min={min}\r\n        max={max}\r\n        value={minVal}\r\n        ref={minValRef}\r\n        onChange={(event) => {\r\n          const value = Math.min(+event.target.value, maxVal - 1);\r\n          setMinVal(value);\r\n          event.target.value = value.toString();\r\n        }}\r\n        className={classnames(\"thumb thumb--zindex-3\", {\r\n          \"thumb--zindex-5\": minVal > max - 100,\r\n        })}\r\n      />\r\n      <input\r\n        type=\"range\"\r\n        min={min}\r\n        max={max}\r\n        value={maxVal}\r\n        ref={maxValRef}\r\n        onChange={(event) => {\r\n          const value = Math.max(+event.target.value, minVal + 1);\r\n          setMaxVal(value);\r\n          event.target.value = value.toString();\r\n        }}\r\n        className=\"thumb thumb--zindex-4\"\r\n      />\r\n\r\n      <div className=\"slider\">\r\n        <div className=\"slider__track\" />\r\n        <div ref={range} className=\"slider__range\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultiRangeSlider;\r\n","import React from 'react'\r\nimport { Accordion } from 'react-bootstrap'\r\nimport styles from \"../styles/SideFilters.module.css\";\r\nimport loadStyle from \"../styles/LoadingCard.module.css\"\r\nfunction SideFiltersLoader() {\r\n    return (\r\n        <div>   <div>\r\n            <div>\r\n                {\" \"}\r\n                <div\r\n                    className={`${styles.sideFilters}  border rounded-2 d-lg-block d-md-none d-none me-4`}\r\n                >\r\n                    <div className=\"search_filter p-4 pb-3 \">\r\n                        <div className=\"d-flex mb-1 \">\r\n                            <h5 style={{ width: \"160px\", height: \"37px\" }} className={` ${loadStyle.skeleton} fw-bold  fs-16 m-0`}></h5>\r\n\r\n                            <div style={{ width: \"28px\", height: \"37px\" }} className={`${loadStyle.skeleton} ms-1 `}>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <h5 style={{ width: \"100px\", height: \"15px\" }} className={` ${loadStyle.skeleton} fw-bold  fs-16 m-0`}></h5>\r\n\r\n                    </div>\r\n                    <Accordion alwaysOpen className={`${styles.accordian_main}`} defaultActiveKey=\"0\">\r\n                        <h5 style={{ width: \"230px\", height: \"45px\" }} className={` ${loadStyle.skeleton} fw-bold mb-2 mx-2 fs-16 m-0`}></h5>\r\n                        <h5 style={{ width: \"230px\", height: \"45px\" }} className={` ${loadStyle.skeleton} fw-bold mb-2 mx-2 fs-16 m-0`}></h5>\r\n\r\n\r\n                        <h5 style={{ width: \"230px\", height: \"45px\" }} className={` ${loadStyle.skeleton} fw-bold mb-2 mx-2 fs-16 m-0`}></h5>\r\n\r\n                        <h5 style={{ width: \"230px\", height: \"45px\" }} className={` ${loadStyle.skeleton} fw-bold mb-2 mx-2 fs-16 m-0`}></h5>\r\n\r\n                        <h5 style={{ width: \"230px\", height: \"45px\" }} className={` ${loadStyle.skeleton} fw-bold mb-2 mx-2 fs-16 m-0`}></h5>\r\n\r\n                    </Accordion>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideFiltersLoader","\"use client\";\r\nimport Image from \"next/image\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Accordion, Button, Col, Form, Offcanvas, Row } from \"react-bootstrap\";\r\nimport { search, searchLight } from \"../../public/icons\";\r\nimport styles from \"../styles/SideFilters.module.css\";\r\nimport loadStyle from \"../styles/LoadingCard.module.css\";\r\nimport MultiRangeSlider from \"./MultiRangeSlider\";\r\nimport SideFiltersLoader from \"./SideFiltersLoader\";\r\nimport { usePathname, useRouter, useSearchParams } from \"next/navigation\";\r\nimport FeaturedCategories from \"../sections/Home/FeaturedCategories\";\r\nimport { useQueryState } from \"next-usequerystate\";\r\nconst SideFilters = ({ filtersData, isLoading, dependentFilters, setdependentFilters, orderBy, setCatCahnge, setisSandwichOpen, isSandwichOpen, setOrderBy, filters, setfiltersData, removeDependentFiltersParam, search, setSearch, priceRange, setPriceRange, filterINDFilters, Dparams }: any) => {\r\n  // const [search, setSearch] = useState<string>(\"\");\r\n  // const [priceRange, setPriceRange] = useState<any>();\r\n  // const [filtersData, setfiltersData] = useState<any>([]);\r\n\r\n  const router = useRouter();\r\n  const pathname = usePathname();\r\n  const searchParams = useSearchParams();\r\n\r\n  useEffect(() => {\r\n    // filtersCheckedData(filtersData,dependentFilters,search,priceRange)\r\n  }, [filtersData, dependentFilters, search, priceRange, orderBy]);\r\n  // const data=await queryClient.getQueryData(\"todos\")\r\n  const handleCheckboxChange = (e: any) => {\r\n    let newValues = { ...filtersData };\r\n    setCatCahnge(true);\r\n    if (e.target.name === \"categories\" || e.target.name === \"cities\") {\r\n      removeDependentFiltersParam(dependentFilters);\r\n      newValues[e.target.name].map((item: any, index: number) => {\r\n        if (Number(index) === Number(e.target.id)) {\r\n          return { ...item, isChecked: e.target.checked };\r\n        } else {\r\n          return { ...item, isChecked: false };\r\n        }\r\n      });\r\n      newValues[e.target.name] = newValues[e.target.name].map((item: any, index: number) => {\r\n        if (Number(index) === Number(e.target.id)) {\r\n          return { ...item, isChecked: e.target.checked };\r\n        } else {\r\n          return { ...item, isChecked: false };\r\n        }\r\n      });\r\n    } else {\r\n      newValues[e.target.name][e.target.id].isChecked = e.target.checked;\r\n    }\r\n    setfiltersData(newValues);\r\n  };\r\n  const handleChangeDependentFilter = (e: any, val: any, id: any) => {\r\n    setCatCahnge(true);\r\n    setdependentFilters((prev) => {\r\n      const updated = prev[val]?.values?.map((item: any, i: any) => {\r\n        if (i === id && prev[val].inputType === \"checkbox\") {\r\n          return { ...item, isChecked: e.target.checked };\r\n        } else if (prev[val].inputType === \"radio\") {\r\n          if (i === id) {\r\n            return { ...item, isChecked: e.target.checked };\r\n          } else {\r\n            return { ...item, isChecked: false };\r\n          }\r\n        }\r\n        return item;\r\n      });\r\n      return { ...prev, [val]: { ...prev[val], values: updated } };\r\n    });\r\n\r\n    // let val={...dependentFilters}\r\n    // val[e.target.name][e.target.id].isChecked = e.target.checked;\r\n    // setdependentFilters(val)\r\n  };\r\n  const clearAllFilters = () => {\r\n    // router.replace(pathname);\r\n    setCatCahnge(true);\r\n    setSearch(\"\");\r\n\r\n    if (filtersData) {\r\n      setfiltersData({\r\n        categories: filtersData?.categories?.map((category: Object) => ({\r\n          ...category,\r\n          isChecked: false,\r\n        })),\r\n        colors: filtersData?.colors?.map((color: Object) => ({\r\n          ...color,\r\n          isChecked: false,\r\n        })),\r\n        conditions: filtersData?.conditions?.map((condition: Object) => ({\r\n          ...condition,\r\n          isChecked: false,\r\n        })),\r\n        locations: filtersData?.locations?.map((location: any) => ({\r\n          ...location,\r\n          isChecked: false,\r\n        })),\r\n        title: \"\",\r\n        priceRange: filtersData?.priceRange,\r\n      });\r\n    }\r\n    if (priceRange) {\r\n      setPriceRange(\"\");\r\n    }\r\n    if (dependentFilters) {\r\n      setdependentFilters((prev: any) => {\r\n        return Object.entries(prev).reduce((oldFilters: any, [fKey, fValue]: any) => {\r\n          return {\r\n            ...oldFilters,\r\n            [fKey]: {\r\n              ...fValue,\r\n              values: fValue.values.reduce((oldValue: any, value: any) => {\r\n                return [...oldValue, { ...value, isChecked: false }];\r\n              }, []),\r\n            },\r\n          };\r\n        }, {});\r\n      });\r\n    }\r\n    setOrderBy({ price: \"\" });\r\n  };\r\n  const handlePriceChange = (min: number, max: number) => {\r\n    setCatCahnge(true);\r\n    setPriceRange(min && max ? { from: min, to: max } : {});\r\n  };\r\n  const clearSingleFilter = (filter: any) => {\r\n    setCatCahnge(true);\r\n    setfiltersData({\r\n      ...filtersData,\r\n      [filter]: filtersData?.[filter]?.map((item: Object) => ({\r\n        ...item,\r\n        isChecked: false,\r\n      })),\r\n    });\r\n  };\r\n  const clearDependentFilter = (filter: any) => {\r\n    setCatCahnge(true);\r\n\r\n    setdependentFilters((prevState: any) => {\r\n      const updatedState: any = {};\r\n      for (const category in prevState) {\r\n        if (prevState.hasOwnProperty(category)) {\r\n          updatedState[category] = prevState[category].values.map((item: any) => ({ ...item, isChecked: false }));\r\n        }\r\n      }\r\n      return {\r\n        ...prevState,\r\n        [filter]: { ...prevState[filter], values: updatedState[filter] },\r\n      };\r\n    });\r\n  };\r\n  const debounce = (mainFunction: Function, delay: number) => {\r\n    // Declare a variable called 'timer' to store the timer ID\r\n    let timer: NodeJS.Timeout;\r\n    // Return an anonymous function that takes in any number of arguments\r\n    return function (min: number, max: number) {\r\n      // Clear the previous timer to prevent the execution of 'mainFunction'\r\n      clearTimeout(timer);\r\n      // Set a new timer that will execute 'mainFunction' after the specified delay\r\n      timer = setTimeout(() => {\r\n        mainFunction(min, max);\r\n      }, delay);\r\n    };\r\n  };\r\n\r\n  // Create a new debounced version of the 'searchData'\r\n  const debouncedSearchData = debounce(handlePriceChange, 1000);\r\n  // Call the debounced version of 'searchData'\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      {isLoading ? (\r\n        <SideFiltersLoader />\r\n      ) : (\r\n        <>\r\n          <div className={`${styles.sideFilters}  border rounded-2 d-lg-block d-md-none d-none me-4`}>\r\n            <div className=\"search_filter p-2 pb-3 \">\r\n              <div className=\"d-flex mb-1 \">\r\n                <input\r\n                  type=\"search\"\r\n                  value={search}\r\n                  onChange={(e) => {\r\n                    setCatCahnge(true);\r\n                    setSearch(e.target.value);\r\n                  }}\r\n                  className=\" rounded-0 fs-14 rounded-start border-0  w-100\"\r\n                  placeholder=\"Search by keyword(s)\"\r\n                />\r\n                <Button className=\" h-100 rounded-0 rounded-end py-2 \">\r\n                  <Image src={searchLight} alt=\"searchLight\" width={18} height={18} />\r\n                </Button>\r\n              </div>\r\n\r\n              <span onClick={clearAllFilters} className=\"secondary-link cursor-pointer text-decoration-underline \">\r\n                {\" \"}\r\n                Clear All Filters{\" \"}\r\n              </span>\r\n            </div>\r\n            <Accordion alwaysOpen className={`${styles.accordian_main}`} defaultActiveKey={[\"0\", \"4\", \"3\", \"1\", \"2\", \"7\"]}>\r\n              {filtersData?.categories?.length > 0 && (\r\n                <Accordion.Item eventKey=\"3\">\r\n                  <Accordion.Header className={`${styles.nav_header} `}>\r\n                    Categories{\" \"}\r\n                    <span\r\n                      className=\"ms-2 text-capitalize secondary-link text-decoration-underline\"\r\n                      onClick={() => {\r\n                        clearSingleFilter(\"categories\");\r\n                        setdependentFilters([]);\r\n                      }}\r\n                    >\r\n                      Clear\r\n                    </span>\r\n                  </Accordion.Header>\r\n                  <Accordion.Body>\r\n                    <div className=\"d-grid\">\r\n                      <div className={` d-flex justify-content-between ${styles.nav_mb}  px-2`}>\r\n                        <div key={`default-1`} className=\"mb-3\">\r\n                          {filtersData?.categories?.map((item: any, index: number) => (\r\n                            <Form.Check key={index} className={`${styles.checkbox}`} onChange={handleCheckboxChange} name=\"categories\" checked={item.isChecked} type=\"radio\" id={`${index}`} label={`${item.label}`} />\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n              )}\r\n\r\n              {filtersData?.locations?.length > 0 && (\r\n                <Accordion.Item eventKey={filtersData.locations?.length > 0 ? \"7\" : \"\"}>\r\n                  <Accordion.Header className={`${styles.nav_header}`}>\r\n                    Locations{\" \"}\r\n                    <span\r\n                      className=\"ms-2 text-capitalize secondary-link text-decoration-underline\"\r\n                      onClick={() => {\r\n                        clearSingleFilter(\"locations\");\r\n                      }}\r\n                    >\r\n                      Clear\r\n                    </span>\r\n                  </Accordion.Header>\r\n                  <Accordion.Body>\r\n                    <div className=\"d-grid\">\r\n                      <div className={` d-flex justify-content-between ${styles.nav_mb}  px-2`}>\r\n                        <div key={`default-1`} className=\"mb-3\">\r\n                          {filtersData?.locations?.map((item: any, index: number) => (\r\n                            <Form.Check key={index} className={`${styles.checkbox}`} onChange={handleCheckboxChange} name=\"locations\" checked={item.isChecked} type=\"checkbox\" id={`${index}`} label={`${item.location_nick}`} />\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n              )}\r\n              {!(filtersData?.colors?.length > 0) ? (\r\n                \"\"\r\n              ) : (\r\n                <Accordion.Item eventKey={filtersData.colors.length > 0 ? \"1\" : \"\"}>\r\n                  <Accordion.Header className={`${styles.nav_header}`}>\r\n                    Colors{\" \"}\r\n                    <span\r\n                      className=\"ms-2 text-capitalize secondary-link text-decoration-underline\"\r\n                      onClick={() => {\r\n                        clearSingleFilter(\"colors\");\r\n                      }}\r\n                    >\r\n                      Clear\r\n                    </span>\r\n                  </Accordion.Header>\r\n                  <Accordion.Body>\r\n                    <div className=\"d-grid\">\r\n                      <div className={` d-flex justify-content-between ${styles.nav_mb}  px-2`}>\r\n                        <div key={`default-1`} className=\"mb-3\">\r\n                          {filtersData.colors?.map((item: any, index: number) => (\r\n                            <Form.Check key={index} className={`${styles.checkbox}`} onChange={handleCheckboxChange} name=\"colors\" checked={item.isChecked} type=\"checkbox\" id={`${index}`} label={`${item.label}`} />\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n              )}\r\n              {filtersData?.conditions?.length > 0 && (\r\n                <Accordion.Item eventKey={filtersData?.conditions?.length > 0 ? \"2\" : \"\"}>\r\n                  <Accordion.Header className={`${styles.nav_header}`}>\r\n                    Condition{\" \"}\r\n                    <span\r\n                      className=\"ms-2 text-capitalize secondary-link text-decoration-underline\"\r\n                      onClick={() => {\r\n                        clearSingleFilter(\"conditions\");\r\n                      }}\r\n                    >\r\n                      Clear\r\n                    </span>\r\n                  </Accordion.Header>\r\n                  <Accordion.Body>\r\n                    <div className=\"d-grid\">\r\n                      <div className={` d-flex justify-content-between ${styles.nav_mb}  px-2`}>\r\n                        <div key={`default-1`} className=\"mb-3\">\r\n                          {filtersData?.conditions?.map((item: any, index: number) => (\r\n                            <Form.Check key={item.id} className={`${styles.checkbox}`} onChange={handleCheckboxChange} name=\"conditions\" checked={item.isChecked} type=\"checkbox\" id={`${index}`} label={<label htmlFor={`${index}`}>{item.label}</label>} />\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n              )}\r\n              {filtersData?.cities?.length > 0 && (\r\n                <Accordion.Item eventKey=\"6\">\r\n                  <Accordion.Header className={`${styles.nav_header}`}>\r\n                    Cities{\" \"}\r\n                    <span\r\n                      className=\"ms-2 text-capitalize secondary-link text-decoration-underline\"\r\n                      onClick={() => {\r\n                        clearSingleFilter(\"cities\");\r\n                        setdependentFilters([]);\r\n                      }}\r\n                    >\r\n                      Clear\r\n                    </span>\r\n                  </Accordion.Header>\r\n                  <Accordion.Body>\r\n                    <div className=\"d-grid\">\r\n                      <div className={` d-flex justify-content-between ${styles.nav_mb}  px-2`}>\r\n                        <div key={`default-1`} className=\"mb-3\">\r\n                          {filtersData?.cities?.map((item: any, index: number) => (\r\n                            <Form.Check key={index} className={`${styles.checkbox}`} onChange={handleCheckboxChange} name=\"cities\" checked={item.isChecked} type=\"radio\" id={`${index}`} label={`${item.label}`} />\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n              )}\r\n              {filtersData?.priceRange?.maxPrice>0 && (\r\n                <Accordion.Item eventKey={filtersData?.priceRange ? \"4\" : \"\"}>\r\n                  <Accordion.Header className={`${styles.nav_header}`}>\r\n                    Prices{\" \"}\r\n                    <span className=\"ms-2 secondary-link text-capitalize text-decoration-underline\" onClick={() => clearSingleFilter(\"conditions\")}>\r\n                      Clear\r\n                    </span>\r\n                  </Accordion.Header>\r\n                  <Accordion.Body>\r\n                    <div className=\"d-grid position-relative justify-content-center\">\r\n                      <div className={` d-flex justify-content-between ${styles.nav_mb} mb-4 `}></div>\r\n                      <Button\r\n                        onClick={() => {\r\n                          handlePriceChange(10000, 20000);\r\n                        }}\r\n                        variant=\"outline-secondary \"\r\n                        className=\"mt-2\"\r\n                      >\r\n                        Rs. 10,000 to Rs. 20,000\r\n                      </Button>\r\n                      <Button\r\n                        onClick={() => {\r\n                          handlePriceChange(20000, 30000);\r\n                        }}\r\n                        variant=\"outline-secondary mt-2\"\r\n                      >\r\n                        Rs. 20,000 to Rs. 30,000\r\n                      </Button>\r\n                      <Button\r\n                        onClick={() => {\r\n                          handlePriceChange(30000, 40000);\r\n                        }}\r\n                        variant=\"outline-secondary mt-2\"\r\n                      >\r\n                        Rs. 30,000 to Rs. 40,000\r\n                      </Button>\r\n                      <Button\r\n                        onClick={() => {\r\n                          handlePriceChange(40000, 50000);\r\n                        }}\r\n                        variant=\"outline-secondary mt-2\"\r\n                      >\r\n                        Rs. 40,000 to Rs. 50,000\r\n                      </Button>\r\n\r\n                      <MultiRangeSlider\r\n                        min={filtersData?.priceRange?.minPrice}\r\n                        max={filtersData?.priceRange?.maxPrice}\r\n                        minValue={filtersData?.priceRange?.minPrice}\r\n                        maxValue={filtersData?.priceRange?.maxPrice}\r\n                        onChange={(min: any, max: any) => {\r\n                          if (filtersData?.priceRange?.minPrice !== min.min && filtersData?.priceRange?.maxPrice !== min.max) {\r\n                            debouncedSearchData(min.min, min.max);\r\n                          }\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n              )}\r\n            </Accordion>\r\n          </div>\r\n          {dependentFilters && Object.keys(dependentFilters).length > 0 && (\r\n            <div className={` ${styles.sideFilters}  border rounded-2 d-lg-block d-md-none d-none me-4 mt-3 `}>\r\n              <Accordion alwaysOpen className={`${styles.accordian_main} `} defaultActiveKey={[\"0\", \"1\", \"2\", \"3\"]}>\r\n                {dependentFilters &&\r\n                  Object.keys(dependentFilters).map((val: any, i: any) => (\r\n                    <>\r\n                      {dependentFilters[val].values.length > 0 && (filterINDFilters?.category_id || Dparams) && (\r\n                        <Accordion.Item key={i} eventKey={dependentFilters[val].values.filter((item) => item.isChecked === true).length > 0 ? \"0\" : i}>\r\n                          <Accordion.Header className={`${styles.nav_header} `}>\r\n                            {dependentFilters[val].label\r\n                              .toString()\r\n                              .replaceAll(\"_\", \" \")\r\n                              .replace(/\\b\\w/g, (c) => c.toUpperCase())}{\" \"}\r\n                            <span\r\n                              className=\"ms-2 text-capitalize secondary-link text-decoration-underline\"\r\n                              onClick={() => {\r\n                                clearDependentFilter(val);\r\n                              }}\r\n                            >\r\n                              Clear\r\n                            </span>\r\n                          </Accordion.Header>\r\n                          <Accordion.Body>\r\n                            <div className=\"d-grid\">\r\n                              <div className={` d-flex justify-content-between ${styles.nav_mb}  px-2`}>\r\n                                <div key={`default-1`} className=\"mb-3\">\r\n                                  {dependentFilters[val].values.map((item: any, index: any) => (\r\n                                    <Form.Check\r\n                                      key={index}\r\n                                      className={`${styles.checkbox}`}\r\n                                      onChange={(e) => handleChangeDependentFilter(e, val, index)}\r\n                                      name={val}\r\n                                      checked={item.isChecked}\r\n                                      type={dependentFilters[val].inputType}\r\n                                      id={`${index}`}\r\n                                      label={`${item.label === 0 ? \"No\" : item.label === 1 ? \"Yes\" : item.label}${dependentFilters[val].unit !== null ? ` ${dependentFilters[val].unit}` : \"\"}(${item.count})`}\r\n                                    />\r\n                                  ))}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </Accordion.Body>\r\n                        </Accordion.Item>\r\n                      )}\r\n                    </>\r\n                  ))}\r\n              </Accordion>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n      <div className=\"d-lg-none d-md-block d-sm-block d-block\">\r\n        <div className=\"pos-f-t\">\r\n          <Offcanvas backdrop={true} scroll={true} show={isSandwichOpen} onHide={() => setisSandwichOpen(false)}>\r\n            <div className={`${styles.filter_div} pt-3 `}>\r\n              <Offcanvas.Header closeButton>\r\n                <h2 className={`${styles.h2}`}>Filter by:</h2>\r\n              </Offcanvas.Header>\r\n              <Offcanvas.Body style={{ height: \"90vh\" }}>\r\n                <div className=\"search_filter p-4 pb-3 \">\r\n                  <div className=\"d-flex mb-1 \">\r\n                    <div className={`position-relative w-100 d-flex align-items-center ${styles.searchbar}`}>\r\n                      {/* <Image\r\n            className={`position-absolute `}\r\n            src={search}\r\n            alt=\"searchIcon\"\r\n            width={18}\r\n            height={18}\r\n          /> */}\r\n                      <input\r\n                        type=\"search\"\r\n                        value={search}\r\n                        onChange={(e) => {\r\n                          setCatCahnge(true);\r\n                          setSearch(e.target.value);\r\n                        }}\r\n                        className=\" rounded-0 fs-14 rounded-start w-100 h-100\"\r\n                        placeholder=\"Search by keyword(s)\"\r\n                      />\r\n                    </div>\r\n                    <Button className=\" h-100 px-4 rounded-0 rounded-end py-1\" onClick={() => setisSandwichOpen(false)}>\r\n                      <Image src={searchLight} alt=\"searchLightIcon\" width={18} height={27} />\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <p onClick={() => clearAllFilters()} className=\"text-decoration-underline link  mb-2\">\r\n                    Clear all Filters\r\n                  </p>\r\n                </div>\r\n                <Accordion alwaysOpen className={`${styles.accordian_main}`} defaultActiveKey={[\"0\", \"3\"]}>\r\n                 {filtersData?.categories?.length>0 && <Accordion.Item eventKey=\"3\" style={filtersData?.categories ? null : { display: \"none\" }}>\r\n                    <Accordion.Header className={`${styles.nav_header}`}>\r\n                      Categories{\" \"}\r\n                      <span\r\n                        className=\"ms-2 secondary-link\"\r\n                        onClick={() => {\r\n                          clearSingleFilter(\"categories\");\r\n                          setdependentFilters([]);\r\n                        }}\r\n                      >\r\n                        Clear\r\n                      </span>\r\n                    </Accordion.Header>\r\n                    <Accordion.Body>\r\n                      <div className=\"d-grid\">\r\n                        <div className={` d-flex justify-content-between ${styles.nav_mb}  px-2`}>\r\n                          <div key={`default-1`} className=\"mb-3\">\r\n                            {filtersData?.categories?.map((item: any, index: number) => (\r\n                              <Form.Check key={index} className={`${styles.checkbox}`} onChange={handleCheckboxChange} name=\"categories\" checked={item.isChecked} type=\"radio\" id={`${index}`} label={`${item.label}`} />\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>}\r\n                  {filtersData?.locations?.length > 0 && (\r\n                    <Accordion.Item eventKey=\"4\" style={filtersData?.locations ? null : { display: \"none\" }}>\r\n                      <Accordion.Header className={`${styles.nav_header}`}>\r\n                        Locations{\" \"}\r\n                        <span\r\n                          className=\"ms-2 text-capitalize secondary-link text-decoration-underline\"\r\n                          onClick={() => {\r\n                            clearSingleFilter(\"categories\");\r\n                          }}\r\n                        >\r\n                          Clear\r\n                        </span>\r\n                      </Accordion.Header>\r\n                      <Accordion.Body>\r\n                        <div className=\"d-grid\">\r\n                          <div className={` d-flex justify-content-between ${styles.nav_mb}  px-2`}>\r\n                            <div key={`default-1`} className=\"mb-3\">\r\n                              {filtersData?.locations?.map((item: any, index: number) => (\r\n                                <Form.Check key={index} className={`${styles.checkbox}`} onChange={handleCheckboxChange} name=\"locations\" checked={item.isChecked} type=\"checkbox\" id={`${index}`} label={`${item.location_nick}`} />\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Accordion.Body>\r\n                    </Accordion.Item>\r\n                  )}\r\n\r\n                  { filtersData?.colors?.length > 0 && <Accordion.Item eventKey=\"1\" style={filtersData?.colors ? null : { display: \"none\" }}>\r\n                    <Accordion.Header className={`${styles.nav_header}`}>\r\n                      Colors{\" \"}\r\n                      <span\r\n                        className=\"ms-2 text-capitalize secondary-link text-decoration-underline\"\r\n                        onClick={() => {\r\n                          clearSingleFilter(\"colors\");\r\n                        }}\r\n                      >\r\n                        Clear\r\n                      </span>\r\n                    </Accordion.Header>\r\n                    <Accordion.Body>\r\n                      <div className=\"d-grid\">\r\n                        <div className={` d-flex justify-content-between ${styles.nav_mb}  px-2`}>\r\n                          <div key={`default-1`} className=\"mb-3\">\r\n                            {filtersData?.colors?.map((item: any, index: number) => (\r\n                              <Form.Check key={index} className={`${styles.checkbox}`} onChange={handleCheckboxChange} name=\"colors\" checked={item.isChecked} type=\"checkbox\" id={`${index}`} label={`${item.label}`} />\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n}\r\n                {filtersData?.conditions?.length > 0 &&  <Accordion.Item eventKey=\"2\" style={filtersData?.conditions ? null : { display: \"none\" }}>\r\n                    <Accordion.Header className={`${styles.nav_header}`}>\r\n                      Condition{\" \"}\r\n                      <span\r\n                        className=\"ms-2 text-capitalize secondary-link text-decoration-underline\"\r\n                        onClick={() => {\r\n                          clearSingleFilter(\"conditions\");\r\n                        }}\r\n                      >\r\n                        Clear\r\n                      </span>\r\n                    </Accordion.Header>\r\n                    <Accordion.Body>\r\n                      <div className=\"d-grid\">\r\n                        <div className={` d-flex justify-content-between ${styles.nav_mb}  px-2`}>\r\n                          <div key={`default-1`} className=\"mb-3\">\r\n                            {filtersData?.conditions?.map((item: any, index: number) => (\r\n                              <Form.Check key={index} className={`${styles.checkbox}`} onChange={handleCheckboxChange} name=\"conditions\" checked={item.isChecked} type=\"checkbox\" id={`${index}`} label={`${item.label}`} />\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>}\r\n                  {filtersData?.cities?.length > 0 && (\r\n                    <Accordion.Item eventKey=\"6\">\r\n                      <Accordion.Header className={`${styles.nav_header}`}>\r\n                        Cities{\" \"}\r\n                        <span\r\n                          className=\"ms-2 text-capitalize secondary-link text-decoration-underline\"\r\n                          onClick={() => {\r\n                            clearSingleFilter(\"cities\");\r\n                            setdependentFilters([]);\r\n                          }}\r\n                        >\r\n                          Clear\r\n                        </span>\r\n                      </Accordion.Header>\r\n                      <Accordion.Body>\r\n                        <div className=\"d-grid\">\r\n                          <div className={` d-flex justify-content-between ${styles.nav_mb}  px-2`}>\r\n                            <div key={`default-1`} className=\"mb-3\">\r\n                              {filtersData?.cities?.map((item: any, index: number) => (\r\n                                <Form.Check key={index} className={`${styles.checkbox}`} onChange={handleCheckboxChange} name=\"cities\" checked={item.isChecked} type=\"radio\" id={`${index}`} label={`${item.label}`} />\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Accordion.Body>\r\n                    </Accordion.Item>\r\n                  )}\r\n                 {filtersData?.priceRange?.minPrice ? <Accordion.Item eventKey=\"7\" style={filtersData?.priceRange ? null : { display: \"none\" }}>\r\n                    <Accordion.Header className={`${styles.nav_header}`}>\r\n                      Prices{\" \"}\r\n                      <span className=\"ms-2 secondary-link text-decoration-underline\" onClick={() => clearSingleFilter(\"priceRange\")}>\r\n                        Clear\r\n                      </span>\r\n                    </Accordion.Header>\r\n                    <Accordion.Body>\r\n                      <div className=\"d-grid justify-content-center\">\r\n                        <div className={` d-flex justify-content-between position-relative ${styles.nav_mb} mb-4 `}>\r\n                          <MultiRangeSlider min={filtersData?.priceRange?.minPrice} max={filtersData?.priceRange?.maxPrice} minValue={filtersData?.priceRange?.minPrice} maxValue={filtersData?.priceRange?.maxPrice} onChange={({ min, max }: any) => debouncedSearchData(min, max)} />\r\n                        </div>\r\n                        <Button\r\n                          onClick={() => {\r\n                            // setMinValue(100);\r\n                            // setMaxValue(1500);\r\n                          }}\r\n                          variant=\"outline-secondary \"\r\n                          className=\"mt-4\"\r\n                        >\r\n                          Rs. 100 to Rs. 1500\r\n                        </Button>\r\n                        <Button\r\n                          onClick={() => {\r\n                            // setMinValue(100);\r\n                            // setMaxValue(700);\r\n                          }}\r\n                          variant=\"outline-secondary mt-2\"\r\n                        >\r\n                          Rs. 100 to Rs. 700\r\n                        </Button>\r\n                        <Button\r\n                          onClick={() => {\r\n                            // setMinValue(100);\r\n                            // setMaxValue(3000);\r\n                          }}\r\n                          variant=\"outline-secondary mt-2\"\r\n                        >\r\n                          Rs. 100 to Rs. 3000\r\n                        </Button>\r\n                        <Button\r\n                          onClick={() => {\r\n                            // setMinValue(600);\r\n                            // setMaxValue(4000);\r\n                          }}\r\n                          variant=\"outline-secondary mt-2\"\r\n                        >\r\n                          Rs. 600 to Rs. 4000\r\n                        </Button>\r\n                      </div>\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>:\"\"}\r\n                </Accordion>\r\n                <div className=\"mt-3\">\r\n                  <Accordion>\r\n                    {dependentFilters &&\r\n                      Object.keys(dependentFilters).map((val: any, i: any) => (\r\n                        <>\r\n                          {dependentFilters[val].values.length > 0 && (\r\n                            <Accordion.Item eventKey={i}>\r\n                              <Accordion.Header className={`${styles.nav_header} `}>\r\n                                {dependentFilters[val].label}{\" \"}\r\n                                <span\r\n                                  className=\"ms-2 text-capitalize secondary-link text-decoration-underline\"\r\n                                  onClick={() => {\r\n                                    clearDependentFilter(val);\r\n                                  }}\r\n                                >\r\n                                  Clear\r\n                                </span>\r\n                              </Accordion.Header>\r\n                              <Accordion.Body>\r\n                                <div className=\"d-grid\">\r\n                                  <div className={` d-flex justify-content-between ${styles.nav_mb}  px-2`}>\r\n                                    <div key={`default-1`} className=\"mb-3\">\r\n                                      {dependentFilters[val].values.map((item: any, index: any) => (\r\n                                        <Form.Check\r\n                                          key={index}\r\n                                          className={`${styles.checkbox}`}\r\n                                          onChange={(e) => handleChangeDependentFilter(e, val, index)}\r\n                                          name={val}\r\n                                          checked={item.isChecked}\r\n                                          type={dependentFilters[val].inputType}\r\n                                          id={`${index}`}\r\n                                          label={`${item.label}${dependentFilters[val].unit !== null ? ` ${dependentFilters[val].unit}` : \"\"}(${item.count})`}\r\n                                        />\r\n                                      ))}\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </Accordion.Body>\r\n                            </Accordion.Item>\r\n                          )}\r\n                        </>\r\n                      ))}\r\n                  </Accordion>\r\n                </div>\r\n              </Offcanvas.Body>\r\n            </div>\r\n          </Offcanvas>\r\n\r\n          {/* {isSandwichOpen && (\r\n      <div\r\n        className={`${styles.bottom_div} justify-content-center align-items-center d-flex`}\r\n      >\r\n        <Button\r\n          onClick={clearAllFilters}\r\n          className={`${styles.clearfilter} ms-5 me-3 `}\r\n          variant=\"outline-secondary w-100 \"\r\n        >\r\n          {\" \"}\r\n          Clear filter{\" \"}\r\n        </Button>\r\n        <Button\r\n          onClick={() => setisSandwichOpen(false)}\r\n          className={`${styles.apply} w-100  me-5`}\r\n          variant=\"secondary  \"\r\n        >\r\n          {\" \"}\r\n          Apply{\" \"}\r\n        </Button>\r\n      </div>\r\n    )} */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideFilters;\r\n","import Image from \"next/image\";\r\nimport React, { useState,useEffect } from \"react\";\r\nimport { Accordion, Button, Form } from \"react-bootstrap\";\r\nimport { search, searchLight } from \"../../public/icons\";\r\n\r\nimport styles from \"../styles/MobileSideFilter.module.css\";\r\nimport MultiRangeSlider from \"./MultiRangeSlider\";\r\nconst MobileSideFilter = ({ filtersData,isLoading, setMobileFilter,setFilters }:any) => {\r\n  const [minValue, setMinValue] = useState(0);\r\n  const [maxValue, setMaxValue] = useState(1000);\r\n  const [search, setSearch] = useState<string>(\"\")\r\n  const [updatedData, setUpdatedData] = useState<any>([])\r\n  useEffect(() => {\r\n    setUpdatedData(filtersData)\r\n  }, [filtersData])\r\n  useEffect(() => {\r\n    const filteredCategories = updatedData.categories?.filter((category: any) => category.isChecked === true);\r\n    const filteredColors = updatedData.colors?.filter((color: any) => color.isChecked === true);\r\n    const filteredConditions = updatedData.conditions?.filter((condition: any) => condition.isChecked === true);\r\n    const filteredBrands = updatedData.brands?.filter((brand:any) => brand.isChecked === true);\r\n    const filteredLocations = updatedData.locations?.filter(\r\n      (brand: any) => brand.isChecked === true\r\n    );\r\n    setFilters({\r\n      categories: filteredCategories,\r\n      colors: filteredColors,\r\n      conditions: filteredConditions,\r\n      brands: filteredBrands,\r\n      title:search\r\n    })\r\n  }, [updatedData,search])\r\n  \r\n  // const data=await queryClient.getQueryData(\"todos\")\r\n  const handleCheckboxChange = (e: any) => {\r\n    let newValues={...updatedData}\r\n    (e.target.checked,\"name\", updatedData[e.target.name],newValues)\r\n   newValues[e.target.name][e.target.id].isChecked = e.target.checked;\r\n    setUpdatedData(newValues)\r\n  }\r\n  const clearAllFilters = () => {\r\n    setSearch(\"\")\r\n  setUpdatedData({\r\n    categories : updatedData?.categories?.map((category: Object) => ({ ...category, isChecked: false })),\r\n    colors: updatedData?.colors?.map((color:Object) => ({ ...color, isChecked: false })),\r\n    conditions: updatedData?.conditions?.map((condition: Object) => ({ ...condition, isChecked: false })),\r\n    brands: updatedData?.brands?.map((brand: Object) => ({ ...brand, isChecked: false })),\r\n    title:\"\"\r\n  })\r\n  }\r\n  return (\r\n    <div className={`${styles.filter_div} pt-3 `}>\r\n      <div className=\"d-flex  mx-4 justify-content-between align-items-centrer\">\r\n        <h2 className={`${styles.h2}`}>Filter by:</h2>\r\n        <span onClick={() => setMobileFilter(\"\")}>Close X</span>\r\n      </div>\r\n      <div className=\"search_filter p-4 pb-3 \">\r\n        <div className=\"d-flex mb-1 \">\r\n          <div\r\n            className={`position-relative w-100 d-flex align-items-center ${styles.searchbar}`}\r\n          >\r\n            <Image\r\n              className={`position-absolute `}\r\n              src={search}\r\n              alt=\"searchIcon\"\r\n              width={18}\r\n              height={18}\r\n            />\r\n            <input\r\n              type=\"search\"\r\n              className=\"ps-5  rounded-0 rounded-start  py-2 w-100\"\r\n              placeholder=\"Search by name\"\r\n            />\r\n          </div>\r\n          <Button className=\" h-100 px-4 rounded-0 rounded-end py-2 \">\r\n            <Image src={searchLight} alt=\"searchLightIcon\" width={18} height={26} />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Accordion alwaysOpen className={`${styles.accordian_main}`} defaultActiveKey=\"0\">\r\n        <Accordion.Item eventKey=\"3\">\r\n            <Accordion.Header className={`${styles.nav_header}`}>\r\n              Categories{\" \"}\r\n              <div className=\"ms-2 secondary-link\">\r\n                {\" \"}\r\n                Clear\r\n              </div>\r\n            </Accordion.Header>\r\n            <Accordion.Body>\r\n              <div className=\"d-grid\">\r\n                <div\r\n                  className={` d-flex justify-content-between ${styles.nav_mb}  px-2`}\r\n                >\r\n                  <div key={`default-1`} className=\"mb-3\">\r\n                  {updatedData.categories?.map((item: any, index: number) => (<  Form.Check key={index}\r\n                      className={`${styles.checkbox}`}\r\n                      onChange={handleCheckboxChange}\r\n                      name=\"categories\"\r\n                      checked={item.isChecked}\r\n                      type=\"checkbox\"\r\n                      id={`${index}`}\r\n                      label={`${item.label}`}\r\n                    />))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n          <Accordion.Item eventKey=\"0\">\r\n            <Accordion.Header className={`${styles.nav_header} `}>\r\n              Brand{\" \"}\r\n              <div className=\"ms-2 secondary-link\">\r\n                {\" \"}\r\n                Clear\r\n              </div>\r\n            </Accordion.Header>\r\n            <Accordion.Body>\r\n              <div className=\"d-grid\">\r\n                <div\r\n                  className={` d-flex justify-content-between ${styles.nav_mb}  px-2`}\r\n                >\r\n                  <div key={`default-1`} className=\"mb-3\">\r\n                    {updatedData.brands?.map((item: any, index: number) => (<  Form.Check key={index}\r\n                      className={`${styles.checkbox}`}\r\n                      onChange={handleCheckboxChange}\r\n                      name=\"brands\"\r\n                      checked={item.isChecked}\r\n                      type=\"checkbox\"\r\n                      id={`${index}`}\r\n                      label={`${item.brand}(200)`}\r\n                    />))}\r\n                \r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n          <Accordion.Item eventKey=\"1\">\r\n            <Accordion.Header className={`${styles.nav_header}`}>\r\n              Colors{\" \"}\r\n              <div className=\"ms-2 secondary-link\">\r\n                {\" \"}\r\n                Clear\r\n              </div>\r\n            </Accordion.Header>\r\n            <Accordion.Body>\r\n              <div className=\"d-grid\">\r\n                <div\r\n                  className={` d-flex justify-content-between ${styles.nav_mb}  px-2`}\r\n                >\r\n                  <div key={`default-1`} className=\"mb-3\">\r\n                  {updatedData.colors?.map((item: any, index: number) => (<  Form.Check key={index}\r\n                      className={`${styles.checkbox}`}\r\n                      onChange={handleCheckboxChange}\r\n                      name=\"colors\"\r\n                      checked={item.isChecked}\r\n                      type=\"checkbox\"\r\n                      id={`${index}`}\r\n                      label={`${item.color}`}\r\n                    />))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n\r\n          <Accordion.Item eventKey=\"2\">\r\n            <Accordion.Header className={`${styles.nav_header}`}>\r\n              Condition{\" \"}\r\n              <div  className=\"ms-2 secondary-link\">\r\n                {\" \"}\r\n                Clear\r\n              </div>\r\n            </Accordion.Header>\r\n            <Accordion.Body>\r\n              <div className=\"d-grid\">\r\n                <div\r\n                  className={` d-flex justify-content-between ${styles.nav_mb}  px-2`}\r\n                >\r\n                  <div key={`default-1`} className=\"mb-3\">\r\n                  {updatedData.conditions?.map((item: any, index: number) => (<  Form.Check key={index}\r\n                      className={`${styles.checkbox}`}\r\n                      onChange={handleCheckboxChange}\r\n                      name=\"conditions\"\r\n                      checked={item.isChecked}\r\n                      type=\"checkbox\"\r\n                      id={`${index}`}\r\n                      label={`${item.condition_item}`}\r\n                    />))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n        \r\n          <Accordion.Item eventKey=\"4\">\r\n            <Accordion.Header className={`${styles.nav_header}`}>\r\n              Prices{\" \"}\r\n              <div className=\"ms-2 secondary-link\">\r\n                {\" \"}\r\n                Clear\r\n              </div>\r\n            </Accordion.Header>\r\n            <Accordion.Body>\r\n              <div className=\"d-grid\">\r\n                <div\r\n                  className={` d-flex justify-content-between ${styles.nav_mb} mb-4 `}\r\n                >\r\n                  <MultiRangeSlider\r\n                    min={updatedData?.priceRange?.minPrice}\r\n                    max={updatedData?.priceRange?.maxPrice}\r\n                    minValue={updatedData?.priceRange?.minPrice}\r\n                    maxValue={updatedData?.priceRange?.maxPrice}\r\n                    onChange={({ min, max }: any) =>\r\n                      (`min = ${min}, max = ${max}`)\r\n                    }\r\n                  />\r\n                </div>\r\n                {/* <Button\r\n                  onClick={() => {\r\n                    setMinValue(100);\r\n                    setMaxValue(1500);\r\n                  }}\r\n                  variant=\"outline-secondary \"\r\n                  className=\"mt-4\"\r\n                >\r\n                  Rs. 100 to Rs. 1500\r\n                </Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    setMinValue(100);\r\n                    setMaxValue(700);\r\n                  }}\r\n                  variant=\"outline-secondary mt-2\"\r\n                >\r\n                  Rs. 100 to Rs. 700\r\n                </Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    setMinValue(100);\r\n                    setMaxValue(3000);\r\n                  }}\r\n                  variant=\"outline-secondary mt-2\"\r\n                >\r\n                  Rs. 100 to Rs. 3000\r\n                </Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    setMinValue(600);\r\n                    setMaxValue(4000);\r\n                  }}\r\n                  variant=\"outline-secondary mt-2\"\r\n                >\r\n                  Rs. 600 to Rs. 4000\r\n                </Button> */}\r\n              </div>\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n        </Accordion>\r\n      {/* <div\r\n        className={`${styles.bottom_div} justify-content-center align-items-center d-flex`}\r\n      >\r\n        <Button\r\n          className={`${styles.clearfilter} ms-5 me-3 `}\r\n          variant=\"outline-secondary w-100 \"\r\n        >\r\n          {\" \"}\r\n          Clear filter{\" \"}\r\n        </Button>\r\n        <Button className={`${styles.apply} w-100  me-5`} variant=\"secondary  \">\r\n          {\" \"}\r\n          Apply{\" \"}\r\n        </Button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MobileSideFilter;\r\n","export { default as Layout } from \"./layouts/Layout\"\r\nexport { default as Sidebar } from \"./Sidebar/Sidebar\"\r\nexport { default as ProductCard } from \"./ProductCard\"\r\nexport { default as SideFilters } from \"./SideFilters\"\r\nexport { default as MobileSideFilter } from \"./MobileSideFilter\"\r\nexport { default as LoadingCard } from \"./LoadingCard\"\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_div\":\"MobileSideFilter_filter_div__MmLJh\",\"searchbar\":\"MobileSideFilter_searchbar__3j7u7\",\"sideFilters\":\"MobileSideFilter_sideFilters__AUwQI\",\"nav_mb\":\"MobileSideFilter_nav_mb__qfEyU\",\"stock_span\":\"MobileSideFilter_stock_span__sdtts\",\"nav_header\":\"MobileSideFilter_nav_header__EImeJ\",\"collapsed\":\"MobileSideFilter_collapsed__0uwNZ\",\"checkbox\":\"MobileSideFilter_checkbox__RL5lL\",\"accordian_main\":\"MobileSideFilter_accordian_main__X9qYt\",\"h2\":\"MobileSideFilter_h2__xJmTJ\",\"bottom_div\":\"MobileSideFilter_bottom_div__yy3z3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationItems\":\"PaginationBar_paginationItems__Wk9W7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"product_title\":\"ProductCard_product_title__Yr00S\",\"condition_container\":\"ProductCard_condition_container__HxXhP\",\"store\":\"ProductCard_store__KOkCT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideFilters\":\"SideFilters_sideFilters__yQ5Sw\",\"nav_mb\":\"SideFilters_nav_mb__2NBgM\",\"stock_span\":\"SideFilters_stock_span___Au3O\",\"nav_header\":\"SideFilters_nav_header___01Yt\",\"collapsed\":\"SideFilters_collapsed__EUe4N\",\"checkbox\":\"SideFilters_checkbox__3yQ7N\",\"accordian_main\":\"SideFilters_accordian_main__6CGDW\"};"],"names":["__webpack_exports__","Z","noOfPages","currentPage","changePage","param","pages","setPages","useState","changePageHandle","i","createPaginationItem","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Pagination","Item","active","onClick","useEffect","row","push","Ellipsis","midpoint","Fragment","jsxs","className","concat","style","Prev","disabled","Next","navLaptopIcon","navAccessoryIcon","navLEDIcon","navTabletIcon","navDesktopIcon","navMobileIcon","components_ProductCard","item","isRecommendationCards","loading","title","price","condition","discount","listingId","discount_unit","color","shopDetails","shopTable","locations","location","image","itemImages","img0","location_id","city","city_name","shopUsername","username","console","log","reserveModal","setReserveModal","contactModal","setContactModal","signInModal","setSignInModal","useRouter","discountedPrice","jsx_runtime","Col","lg","xl","md","sm","xs","LoadingCard","Card","maxHeight","div","id","height","Link","href","replaceAll","motion","img","initial","opacity","animate","transition","delay","duration","width","objectFit","aspectRatio","src","alt","onError","e","target","imagePlaceholder","WishlistIcon","border","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","background","p","fontSize","Body","OverlayTrigger","placement","overlay","Tooltip","styles","span","toLocaleString","shopIcon","components_MultiRangeSlider","min","max","minValue","maxValue","onChange","minVal","setMinVal","Number","maxVal","setMaxVal","minValRef","useRef","maxValRef","range","getPercent","useCallback","Math","round","value","current","left","datalist","option","input","type","ref","event","toString","classnames","components_SideFiltersLoader","h5","loadStyle","Accordion","alwaysOpen","defaultActiveKey","components_SideFilters","filtersData","timer","isLoading","dependentFilters","setdependentFilters","orderBy","setCatCahnge","setisSandwichOpen","isSandwichOpen","setOrderBy","filters","setfiltersData","removeDependentFiltersParam","search","setSearch","priceRange","setPriceRange","filterINDFilters","Dparams","usePathname","useSearchParams","handleCheckboxChange","newValues","name","map","index","isChecked","checked","handleChangeDependentFilter","val","prev","updated","values","inputType","clearAllFilters","categories","category","colors","conditions","Object","entries","reduce","oldFilters","fKey","fValue","oldValue","handlePriceChange","from","to","clearSingleFilter","filter","clearDependentFilter","updatedState","prevState","hasOwnProperty","debouncedSearchData","clearTimeout","setTimeout","mainFunction","SideFiltersLoader","placeholder","Button","Image","searchLight","length","eventKey","Header","Form","Check","label","location_nick","htmlFor","cities","maxPrice","variant","MultiRangeSlider","minPrice","keys","category_id","replace","c","toUpperCase","unit","count","Offcanvas","backdrop","scroll","show","onHide","closeButton","h2","display","components_MobileSideFilter","updatedData","setMobileFilter","setFilters","setMinValue","setMaxValue","setUpdatedData","filteredCategories","filteredColors","filteredConditions","filteredBrands","brands","brand","filteredLocations","condition_item","module","exports"],"sourceRoot":""}